{"version":3,"sources":["static/music.png","data/Card.ts","data/Constants.ts","data/Settings.ts","data/Question.ts","data/Util.ts","data/QuestionStats.ts","data/PlayerStats.ts","data/Album.ts","data/Artist.ts","data/Media.ts","data/Quizz.ts","data/Game.ts","data/GameStats.ts","data/Navigate.ts","component/Header.tsx","component/Footer.tsx","component/Page.tsx","component/GameCard.tsx","component/NextButton.tsx","page/HomePage.tsx","component/PlayerAvatar.tsx","component/GamePage.tsx","page/SettingsPage.tsx","component/icon/ClubIcon.tsx","component/icon/DiamondIcon.tsx","component/icon/CircleIcon.tsx","component/icon/HeartIcon.tsx","component/icon/SpadeIcon.tsx","component/icon/SquareIcon.tsx","component/icon/StarIcon.tsx","component/icon/TriangleIcon.tsx","component/icon/CrossIcon.tsx","component/PlayingCardIcon.tsx","component/PlayingCard.tsx","component/PlayingCardModal.tsx","data/Avatar.ts","component/AvatarModal.tsx","component/PlayerCard.tsx","page/PlayersPage.tsx","page/StartPage.tsx","component/MediaCard.tsx","component/MusicPlayer.tsx","component/QuestionCard.tsx","page/QuestionPage.tsx","component/PlayerScoreCard.tsx","page/ScoresPage.tsx","page/AvatarsPage.tsx","page/PlayingCardsPage.tsx","App.tsx","index.jsx"],"names":["module","exports","__webpack_require__","p","CardSymbol","CardColor","CardSize","MAX_NB_GAME","DEFAULT_NB_PLAYER","PLAYER_ID_SUFFIX","DEFAULT_NB_QUESTION","QUESTION_ID_SUFFIX","DEFAULT_NB_ANSWER_PER_QUESTION","ANSWER_ID_SUFFIX","newSettings","nbPlayer","arguments","length","undefined","nbQuestion","nbAnswer","addAnswer","question","answer","hint","correct","number","answers","current","id","push","getPlayerAnswerIndex","playerId","answerId","playerAnswers","findIndex","playerAnswer","hasPlayerAnswer","onQuestionPlayed","console","log","concat","status","onQuestionCompleted","range","nb","Array","from","keys","pickIndexes","nbSelected","nbTotal","shuffle","selected","Set","i","j","Math","random","has","add","values","_ref","toZeroPadString","value","padSize","padStart","toDateTimeString","date","Date","year","getFullYear","month","getMonth","day","getDate","toDateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","toTimeString","onUserEvent","callback","event","stopPropagation","preventDefault","onKeyEvent","keyCallback","key","HeartCard","symbol","HEART","color","RED","DiamondCard","DIAMOND","DefaultCards","CLUB","BLACK","SPADE","CIRCLE","BLUE","YELLOW","GREEN","TRIANGLE","ORANGE","PURPLE","getAnswerStats","stats","find","getOrSetAnswerStats","answerStats","success","score","getQuestionStats","questionId","questions","getOrSetQuestionStats","questionStats","error","flagQuestionAsError","nbError","newAlbum","title","picture","newArtist","name","newMedia","music","artist","album","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","test","_unsupportedIterableToArray","F","s","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","GameStep","newGameId","customAlphabet","newGameCode","newGame","code","created","now","updated","SETTINGS","settings","players","started","ended","addQuestion","game","media","previous","nextNumber","previousNumber","updateSettings","update","_objectSpread","updatePlayer","map","player","GAMES","sortGames","games","_toConsumableArray","sort","left","right","storeGames","sanitizedGames","localStorage","setItem","JSON","stringify","loadGames","parse","getItem","selectGame","gameId","g","isSetUp","hasPlayers","hasQuestions","OnStep","gameStep","onSetUp","process","_step2","_iterator2","legacyJson","genres","genre","reduce","questionIndex","_step3","startIndex","_iterator3","_loop","endIndex","musics","correctIndex","correctMusic","musicURL","indexes","filter","index","_step4","_iterator4","_ret","buildLegacyQuestions","forEach","card","avatarId","nbSuccess","nbFailure","nbMiss","addPlayer","PLAYERS","onStartGame","questionNumber","nbCompleted","progress","QUIZZ","onAnswers","_step","nbPoint","_iterator","some","isCorrect","flagAnswerAsIncorrect","flagAnswerAsCorrect","miss","onEndGame","SCORES","toGamePage","toSettingsPage","toPlayersPage","toQuizzPage","toScoresPage","Header","props","updateGame","onPrevious","onNext","navigate","useNavigate","isHomeSelected","isSettingsSelected","isPlayersSelected","isQuizzSelected","isScoresSelected","isSettingsDisabled","isSettingsPageDisabled","isPlayersDisabled","isPlayersPageDisabled","isQuizzDisabled","isQuizzPageDisabled","isScoresDisabled","isScoresPageDisabled","updateGameStep","onHomePage","onSettingsPage","onPlayersPage","onQuizzPage","onScoresPage","handleKeyPress","React","useCallback","useEffect","document","addEventListener","removeEventListener","_React$useState","useState","_React$useState2","_slicedToArray","menuElement","setMenuElement","open","Boolean","finalTitle","createElement","Box","className","sx","flexGrow","style","marginBottom","AppBar","position","Toolbar","width","display","alignItems","justifyContent","Fragment","IconButton","aria-label","aria-controls","aria-expanded","aria-haspopup","onClick","currentTarget","MenuIcon","Menu","anchorEl","onClose","MenuListProps","aria-labelledby","MenuItem","disabled","ListItemIcon","Home","fontSize","ListItemText","Settings","Group","MusicNote","MilitaryTech","fontWeight","textTransform","SkipPreviousIcon","SkipNextIcon","Footer","Page","children","useStyles","makeStyles","gameCard","flexDirection","padding","borderRadius","border","&:hover","backgroundColor","gameLine","gameItem","GameCard","startGame","resumeGame","deleteGame","classes","onStart","margin","onResume","onDelete","round","Stack","direction","spacing","opacity","Chip","label","CloseIcon","marginLeft","PersonIcon","marginRight","MusicNoteIcon","CalendarTodayIcon","marginTop","height","LinearProgress","variant","valueBuffer","NextButton","description","AvatarSize","HomePage","addGame","deleteGames","oldGameIds","sortedGames","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","Grid","container","item","xs","textAlign","allGameIds","DeleteIcon","GamePage","replace","toLowerCase","SettingsPage","useParams","lessPlayerDisabled","morePlayerDisabled","lessQuestionDisabled","moreQuestionDisabled","lessAnswerDisabled","moreAnswerDisabled","updateNbPlayer","updateNbQuestion","updateNbAnswer","lessPlayer","morePlayer","lessQuestion","moreQuestion","lessAnswer","moreAnswer","Button","size","QuizIcon","ClubIcon","xmlns","viewBox","d","DiamondIcon","CircleIcon","HeartIcon","SpadeIcon","SquareIcon","StarIcon","TriangleIcon","CrossIcon","PlayingCardIcon","CROSS","SQUARE","STAR","PlayingCard","cardSize","cardClassNames","PlayerAvatar","avatarClassNames","PlayingCardModal","closeModal","onSymbolChange","onColorChange","onCardChange","Modal","aria-describedby","top","transform","bgcolor","boxShadow","Typography","GRAY","newColor","XL","newSymbol","defaultCard","XS","ALL_AVATAR_IDS","AvatarModal","onAvatarChange","newAvatarId","M","PlayerCard","avatarSize","setName","editMode","_React$useState3","_React$useState4","playingCardModal","setPlayingCardModal","_React$useState5","_React$useState6","avatarModal","setAvatarModal","updatePlayerCard","Card","CardContent","L","TextField","onChange","target","onBlur","updatePlayerName","S","updatePlayerAvatar","PlayersPage","StartPage","MediaCard","mediaImage","musicBackground","artistName","albumName","component","pl","pb","CardMedia","image","MusicPlayer","loading","info","playing","played","onMusicLoaded","onMusicPlaying","onMusicPaused","onMusicEnded","audioRef","useRef","Audio","reset","toggleMusic","play","pause","lessVolume","volume","max","moreVolume","min","src","loop","onAudioLoad","currentTime","duration","onAudioReady","onAudioEnd","playingMusic","pausingMusic","onPause","onPlay","LightTooltip","withStyles","theme","tooltip","arrow","Tooltip","icon","PlayArrowIcon","cursor","background","backgroundSize","CircularProgress","bottom","QuestionCard","updateQuestion","setQuestionId","musicLoading","setMusicLoading","nbSecondsTotal","setNbSecondsTotal","_React$useState7","_React$useState8","nbShownAnswers","setNbShownAnswers","_React$useState9","_React$useState10","musicReady","setMusicReady","_React$useState11","_React$useState12","countDown","setCountDown","_React$useState13","_React$useState14","musicStarted","setMusicStarted","_React$useState15","_React$useState16","musicPlaying","setMusicPlaying","_React$useState17","_React$useState18","nbSecondsPlayed","setNbSecondsPlayed","_React$useState19","_React$useState20","musicEnded","setMusicEnded","musicError","musicPlayed","addPlayerAnswer","removeAnswer","splice","removePlayerAnswer","flagQuestionAsFailed","onQuestionError","onErrorAnswers","sortedPlayers","badgeValue","badgeColor","resetOnPlayed","onMusicFailed","showNextAnswer","showCountDown","showNbSecondsPlayed","timerId","clearInterval","setInterval","ONE_SECOND","ceil","musicPaused","showHints","musicPlayerInfo","Alert","severity","hidden","Paper","elevation","Avatar","lineHeight","justifyItems","failed","nbSeconds","getQuestionAnswerStats","transition","Badge","badgeContent","tooltipId","disableTooltip","disableFocusListener","disableHoverListener","QuestionPage","_useParams","questionParam","parseInt","selectQuestion","updateQuestionNumber","Error","onQuestionNumber","PlayerScoreCard","medalColor","prettyPoints","prettyPercent","successPercent","failurePercent","missPercent","sumBySuccessAnswer","sumByFailureAnswer","nbSuccessAnswer","nbFailureAnswer","avgSuccessDelta","avgFailureDelta","avgDelta","aspectRatio","MilitaryTechIcon","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","ScoresPage","previousPosition","previousScore","colorScale","medalColorScale","VictoryChart","data","intermediateScore","x","y","computeVizualiationScoreData","VictoryGroup","labels","datum","labelComponent","VictoryTooltip","VictoryLine","VictoryScatter","fill","AvatarsPage","PlayingCardsPage","App","setGames","prev","Router","Routes","Route","path","element","gameIds","newGames","indexOf","ReactDOM","render","StrictMode","ErrorBoundary","fallback","getElementById"],"mappings":"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","file":"static/js/main.dfbff7bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.45a44973.png\";","\nexport enum CardSymbol {\n  HEART = 'HEART',\n  DIAMOND = 'DIAMOND',\n  CLUB = 'CLUB',\n  SPADE = 'SPADE',\n  STAR = 'STAR',\n  CIRCLE = 'CIRCLE',\n  SQUARE = 'SQUARE',\n  TRIANGLE = 'TRIANGLE',\n  CROSS = 'CROSS',\n}  \n\nexport enum CardColor {\n  BLACK = 'BLACK',\n  RED = 'RED',\n  BLUE = 'BLUE',\n  GREEN = 'GREEN',\n  PURPLE = 'PURPLE',\n  YELLOW = 'YELLOW',\n  ORANGE = 'ORANGE',\n  PINK = 'PINK',\n  BROWN = 'BROWN',\n  GRAY = 'GRAY',\n}\n\nexport enum CardSize {\n  XS = 'XS',\n  S = 'S',\n  M = 'M',\n  L = 'L',\n  XL = 'XL',\n}\n\nexport interface Card {\n  readonly symbol: CardSymbol\n  readonly color: CardColor\n  size?: CardSize\n  number?: number\n  value?: string\n}\n\nexport const HeartCard: Card = { symbol: CardSymbol.HEART, color: CardColor.RED }\nexport const DiamondCard: Card = { symbol: CardSymbol.DIAMOND, color: CardColor.RED }\nexport const ClubCard: Card = { symbol: CardSymbol.CLUB, color: CardColor.BLACK }\nexport const SpadeCard: Card = { symbol: CardSymbol.SPADE, color: CardColor.BLACK }\n\nexport const BlueCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.BLUE }\nexport const YellowCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.YELLOW }\nexport const RedCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.RED }\nexport const GreenCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.GREEN }\n\nexport const OrangeTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.ORANGE }\nexport const PurpleTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.PURPLE }\n\nexport const DefaultCards: Card[] = [ \n  ClubCard, \n  DiamondCard, \n  HeartCard, \n  SpadeCard,\n\n  BlueCircleCard, \n  YellowCircleCard, \n  RedCircleCard, \n  GreenCircleCard,\n  \n  OrangeTriangleCard,\n  PurpleTriangleCard \n]","\nexport const DEBUG = false\n\nexport const HEADER_KEYBOARD_SHORTCUTS = true\nexport const MUSIC_PLAYER_KEYBOARD_SHORTCUTS = true\n\nexport const MAX_NB_GAME = 4\n\nexport const DEFAULT_NB_PLAYER = 2\nexport const MIN_NB_PLAYER = 2\nexport const MAX_NB_PLAYER = 9\nexport const INCREMENT_NB_PLAYER = 1\nexport const PLAYER_ID_SUFFIX = 9000\n\nexport const DEFAULT_NB_QUESTION = 50\nexport const MIN_NB_QUESTION = 10\nexport const MAX_NB_QUESTION = 99\nexport const INCREMENT_NB_QUESTION = 10\nexport const QUESTION_ID_SUFFIX = 0\n\nexport const DEFAULT_NB_ANSWER_PER_QUESTION = 5\nexport const MIN_NB_ANSWER_PER_QUESTION = 3\nexport const MAX_NB_ANSWER_PER_QUESTION = 6\nexport const INCREMENT_NB_ANSWER_PER_QUESTION = 1\nexport const ANSWER_ID_SUFFIX = 100\n\nexport const ONE_SECOND = DEBUG ? 300 : 1000\nexport const MAX_NB_SECONDS_LOADING = DEBUG ? 10 : 15\nexport const MAX_NB_SECONDS_PLAYING = DEBUG ? 20 : 30\n\nexport const MAX_NB_AVATAR = 20","// //////////////////////////////////////////////////\n// model\n\nimport { DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION } from \"./Constants\"\n\nexport interface Settings {\n  nbPlayer: number\n  nbQuestion: number\n  nbAnswer: number\n}\n\nexport type SettingsUpdater = ( settings: Settings ) => Settings\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newSettings( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Settings {\n  return {\n    nbPlayer: nbPlayer,\n    nbQuestion: nbQuestion,\n    nbAnswer: nbAnswer,\n  }\n}","import { Answer, AnswerId } from './Answer'\nimport { GameId } from './Game'\nimport { Media } from './Media'\nimport { PlayerId } from './Player'\nimport { PlayerAnswer } from './PlayerAnswer'\nimport { toZeroPadString } from './Util'\n\n// //////////////////////////////////////////////////\n// status\n\nexport type QuestionStatus = \n  | 'not-played' \n  | 'played'\n  | 'completed'\n  | 'error'\n\n// //////////////////////////////////////////////////\n// model\n\nexport type QuestionId = number\n\nexport interface Question {\n  id: QuestionId\n  number: number\n  status: QuestionStatus\n  title: string\n  media: Media\n  answers: Answer[] \n  playerAnswers: PlayerAnswer[] \n  previousNumber?: number\n  nextNumber?: number\n}\n\nexport type QuestionUpdater = ( question: Question ) => Question\nexport type OnQuestionUpdate = ( gameId: GameId, questionId: QuestionId, questionUpdater: QuestionUpdater ) => void\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addAnswer( question: Question, answer: string, hint: string = \"\", correct: boolean = false ): Answer {\n  const number = question.answers.length + 1\n  const current: Answer = {\n    id: question.id + number, \n    number: number,\n    answer: answer,\n    hint: hint,\n    correct: correct,\n  }\n  question.answers.push( current )\n  return current\n}\n\nexport function addPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  if ( !hasPlayerAnswer( question, playerId, answerId ) ) {\n    question.playerAnswers.push( {\n      playerId: playerId, \n      answerId: answerId,\n    } )\n  }\n  return question\n}\n\nexport function getPlayerAnswerIndex( question: Question, playerId: PlayerId, answerId: AnswerId ): number {\n  return question.playerAnswers.findIndex( playerAnswer => ( playerAnswer.playerId === playerId ) && ( playerAnswer.answerId === answerId ) )\n}\n\nexport function hasPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): boolean {\n  return getPlayerAnswerIndex( question, playerId, answerId ) > -1\n}\n\nexport function removePlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  let index = getPlayerAnswerIndex( question, playerId, answerId )\n  while ( index > -1 ) {\n    question.playerAnswers.splice( index, 1 )\n    index = getPlayerAnswerIndex( question, playerId, answerId )\n  }\n  return question\n}\n\nexport function isCorrect( question: Question, playerAnswer: PlayerAnswer ): boolean {\n  return question.answers.some( answer => ( answer.id ===  playerAnswer.answerId ) && answer.correct )\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function onQuestionPlayed( question: Question ): Question {\n  console.log( `[on-question-played] question: ${question.id}` )\n\n  question.status = 'played'\n  \n  return question\n}\n\nexport function onQuestionCompleted( question: Question ): Question {\n  console.log( `[on-question-completed] question: ${question.id}` )\n\n  question.status = 'completed'\n  \n  return question\n}\n\nexport function onQuestionError( question: Question ): Question {\n  console.log( `[on-question-error] question: ${question.id}` )\n\n  question.status = 'error'\n  \n  return question\n}","\n// //////////////////////////////////////////////////\n// range\n\nexport function range( nb: number ): number[] {\n    return Array.from( Array( nb ).keys() )\n}\n\nexport function pickIndexes( nbSelected: number, nbTotal: number ): number[] {    \n\n    if ( nbTotal <= nbSelected ) {\n        return shuffle( range( nbTotal ) )\n    }\n\n    var selected = new Set<number>();\n    for( var i = 0; i < nbSelected; i++ ) {\n        var j = Math.random() * nbTotal | 0;\n        while(selected.has(j)){\n            j = Math.random() * nbTotal | 0;\n        }\n        selected.add( j );\n    }\n    return Array.from( selected )\n}\n\nexport function pick<T>( values: T[] ): T {\n    return values[ Math.random() * values.length | 0 ];\n}\n\nexport function shuffle<T>( values: T[] ) {\n    for ( let i = values.length - 1; i > 0; i-- ) {\n        let j = Math.random() * ( i + 1 ) | 0;\n        [ values[ i ], values[ j ] ] = [ values[ j ], values[ i ] ];\n    }\n    return values\n}\n\n// //////////////////////////////////////////////////\n// format\n\nexport function toZeroPadString( value: number, padSize: number ): string {\n    return `${value}`.padStart( padSize, '0' )\n}\n\nexport function toDateString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const year = date.getFullYear()\n    const month = toZeroPadString( date.getMonth() + 1, 2 )\n    const day = toZeroPadString( date.getDate(), 2 )\n    return `${year}-${month}-${day}`\n}\n\nexport function toTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const hours = toZeroPadString( date.getHours(), 2 )\n    const minutes = toZeroPadString( date.getMinutes(), 2 )\n    const seconds = toZeroPadString( date.getSeconds(), 2 )\n    return `${hours}:${minutes}:${seconds}`\n}\n\nexport function toDateTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    return `${toDateString(value)} ${toTimeString(value)}`\n}\n\n// //////////////////////////////////////////////////\n// user event\n\nexport type Callback = () => void\nexport type EventCallback = ( event: any ) => void\n\nexport function onUserEvent( callback: Callback ): EventCallback {\n    return ( event: any ) => {\n        callback()\n        event.stopPropagation()\n        event.preventDefault()\n    }\n}\n\n// //////////////////////////////////////////////////\n// key event\n\nexport type KeyCallback = ( key: string ) => boolean\nexport type KeyEventCallback = ( event: any ) => void\n\nexport function onKeyEvent( keyCallback: KeyCallback ): EventCallback {\n    return ( event: any ) => {\n        if ( keyCallback( event.key ) ) {\n            console.log( `key-event [${event.key}] >>> handled! >>> stop propagation!` )    \n            event.stopPropagation()\n            event.preventDefault()\n        } else {\n            console.log( `key-event [${event.key}] >>> propagate...` )    \n        }\n    }\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nimport { AnswerId } from \"./Answer\"\nimport { AnswerStats } from \"./AnswerStats\"\nimport { QuestionId } from \"./Question\"\n\nexport interface QuestionStats {\n  id: QuestionId\n  score: number\n  answers: AnswerStats[]\n  error: boolean\n}\n\nexport function getAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats | undefined {  \n  return stats.answers.find( answer => answer.id === answerId )\n}\n\nexport function getOrSetAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats {  \n  const current = getAnswerStats( stats, answerId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const answerStats: AnswerStats = {\n    id: answerId,\n    success: false,\n    score: 0\n  }\n  stats.answers.push( answerStats )\n  return answerStats\n}\n\n\n","import { AnswerId } from './Answer'\nimport { AnswerStats } from './AnswerStats'\nimport { QuestionId } from './Question'\nimport { getAnswerStats, getOrSetAnswerStats, QuestionStats } from './QuestionStats'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface PlayerStats {\n  score: number\n  nbAnswer: number\n  nbSuccess: number\n  nbFailure: number\n  nbMiss: number,\n  nbError: number,\n  questions: QuestionStats[]\n}\n\nexport interface PlayerVizualiationScoreData {\n  x: string // question number\n  y: number // player score\n  tooltip: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newPlayerStats(): PlayerStats {\n  return {\n    score: 0,\n    nbAnswer: 0,\n    nbSuccess: 0,\n    nbFailure: 0,\n    nbMiss: 0,\n    nbError: 0,\n    questions: [],\n  }\n}\n\nexport function getQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats | undefined {  \n  return stats.questions.find( question => question.id === questionId )\n}\n\nexport function getQuestionAnswerStats( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId ): AnswerStats | undefined {  \n  const questionStats = getQuestionStats( stats, questionId )\n  return questionStats ? getAnswerStats( questionStats, answerId ) : undefined\n}\n\nexport function getOrSetQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats {  \n  const current = getQuestionStats( stats, questionId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const questionStats: QuestionStats = {\n    id: questionId,\n    score: 0,\n    answers: [],\n    error: false\n  }\n  stats.questions.push( questionStats )\n  return questionStats\n}\n\nexport function flagAnswerAsCorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbSuccess++\n  stats.score += nbPoint\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = true\n  answerStats.score = nbPoint\n}\n\nexport function flagAnswerAsIncorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbFailure++\n  stats.score += nbPoint // should be negative\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint // should be negative\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = false\n  answerStats.score = nbPoint // should be negative\n}\n\nexport function flagQuestionAsMiss( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbMiss++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n}\n\nexport function flagQuestionAsError( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbError++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n  questionStats.error = true\n}\n\nexport function computeVizualiationScoreData( stats: PlayerStats ): PlayerVizualiationScoreData[] {\n  const data:PlayerVizualiationScoreData[] = []\n  \n  let questionNumber = 0\n  let intermediateScore = 0\n\n  data.push({\n    x: ` `,\n    y: intermediateScore,\n    tooltip : `${intermediateScore} (start)`\n  })\n\n  for ( const question of stats.questions ) {\n    questionNumber++\n    intermediateScore += question.score\n    \n    let tooltip = ''\n    if ( question.error ) {\n      tooltip = `${intermediateScore} (error)`\n    } else if ( question.answers.length == 0 ) {\n      tooltip = `${intermediateScore} (miss)`\n    } else if ( question.score >= 0 ) {\n      tooltip = `${intermediateScore} (+${question.score})`\n    } else {\n      tooltip = `${intermediateScore} (${question.score})`\n    }\n    \n    data.push({\n      x: `Q${questionNumber}`,\n      y: intermediateScore,\n      tooltip : tooltip\n    })\n  }\n  return data\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Album {\n  title: string\n  picture: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newAlbum( title: string, picture: string = \"\" ): Album {\n  return {\n    title: title,\n    picture: picture,\n  }\n}","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Artist {\n  name: string\n  picture: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newArtist( name: string, picture: string = \"\" ): Artist {\n  return {\n    name: name,\n    picture: picture,\n  }\n}","import { Album } from './Album'\nimport { Artist } from './Artist'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface Media {\n  title: string\n  music: string \n  artist?: Artist\n  album?: Album  \n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newMedia( title: string, music: string, artist?: Artist, album?: Album ): Media {\n  return {\n    title: title,\n    music: music,\n    artist: artist,\n    album: album,\n  }\n}","// //////////////////////////////////////////////////\n// import\n\nimport { newAlbum } from \"./Album\"\nimport { newArtist } from \"./Artist\"\nimport { addQuestion, Game } from \"./Game\"\nimport { newMedia } from \"./Media\"\nimport { addAnswer, Question } from \"./Question\"\nimport { Settings } from \"./Settings\"\nimport { pick, pickIndexes, range, shuffle } from \"./Util\"\nimport legacyJson from '../static/legacy.json';\nimport { Shuffle } from \"@mui/icons-material\"\n\n// //////////////////////////////////////////////////\n// dummy game\n\nconst fullMusic = newMedia(\n    \"Harder, Better, Faster, Stronger & Pêcheur\", \n    \"https://cdns-preview-d.dzcdn.net/stream/c-deda7fa9316d9e9e880d2c6207e92260-8.mp3\", \n    newArtist( \n        \"Daft Punk & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    newAlbum( \n        \"Discovery & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/cover/2e018122cb56986277102d2041a592c8/56x56-000000-80-0-0.jpg\"\n    )\n)\n\nconst noAlbumMusic = newMedia(\n    \"Crescendolls\", \n    \"https://cdns-preview-0.dzcdn.net/stream/c-02585dc790f2904c4e870cb3bcecfcf3-8.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    undefined\n) \n\nconst noPictureMusic = newMedia(\n    \"Superheroes\", \n    \"https://cdns-preview-3.dzcdn.net/stream/c-3d8caae0a1c59f417f31bb747c43818b-7.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        undefined\n    ), \n    undefined\n)\n\nconst shortMusic = newMedia(\n    \"Short\", \n    \"http://gregory.valigiani.free.fr/amnezic/Rem2-14-10.mp3\", \n    newArtist( \n        \"Short\", \n        undefined\n    ), \n    undefined\n) \n\nconst failedMusic = newMedia(\n    \"Failed\",\n    \"http://gregory.valigiani.free.fr/amnezic/Clash%20-%20Should%20I%20Stay%20Or%20Go.mp3\",\n    newArtist( \n        \"Failed\", \n        undefined\n    ), \n    undefined\n)\n\nconst dummyMusics = [ fullMusic, noAlbumMusic, noPictureMusic, shortMusic, failedMusic ]\n\nexport function buildDummyQuestions( game: Game ): Game {\n\n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n    range( nbQuestion ).forEach( i => {\n        const media = dummyMusics[ i % dummyMusics.length ]\n        const artist = media.artist ? media.artist.name : `artist ${i+1}`\n        const question: Question = addQuestion( game, artist, media )\n\n        for ( let j = 0 ; j < nbAnswer ; j++ ) {\n        if ( i % nbAnswer == j ) {\n            addAnswer( question, artist, media.title, true )\n        } else {\n            addAnswer( question, `artist ${j+1}`, `hint ${j+1}`, false )\n        }\n        }\n    } )\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// test game\n\nexport function buildTestQuestions( game: Game ): Game {\n\n    const genre = legacyJson.genres.find( genre => genre.genre === \"Bruitages\" );\n    if ( genre ) {\n        const musics = genre.media || []\n\n        const nbQuestion = game.settings.nbQuestion\n        const nbAnswer = game.settings.nbAnswer\n        range( nbQuestion ).map( i => i+1 ).forEach( i => {\n\n            const indexes = pickIndexes( nbAnswer, musics.length )\n            const correctIndex = pick( indexes )\n            const correctMusic = musics[ correctIndex ]\n            const artist = newArtist( correctMusic.artist.name )\n            const media = newMedia( correctMusic.title, correctMusic.music, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, media )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist.name, music.title, index === correctIndex )\n            }\n        } )\n    }\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// legacy game\n\nexport function buildLegacyQuestions( game: Game ): Game {\n    \n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n\n    const nbMusic = legacyJson.genres.map( genre => genre.media.length ).reduce( ( previous, current ) => previous + current, 0 )\n    const questionIndexes = pickIndexes( nbQuestion, nbMusic )\n\n    for ( const questionIndex of questionIndexes ) {\n\n        console.log(\"questionIndex: %d\",questionIndex)\n\n        let startIndex = 0\n        for ( const genre of legacyJson.genres ) {\n            if ( genre.media.length === 0 ) {\n                continue\n            }\n            const endIndex = startIndex + genre.media.length - 1\n            console.log(\"   startIndex: %d - length: %d - endIndex: %d\",startIndex,genre.media.length, endIndex)\n            if ( endIndex < questionIndex ) {\n                startIndex = endIndex + 1\n                continue\n            }\n\n            const musics = genre.media || []\n            const correctIndex = questionIndex - startIndex\n            console.log(\"   correctIndex: %d - questionIndex: %d - startIndex: %d\",correctIndex,questionIndex, startIndex)\n            const correctMusic = musics[ correctIndex ]\n            console.log(correctMusic.artist)\n            const artist = newArtist( correctMusic.artist && correctMusic.artist.name ? correctMusic.artist.name : '???' )\n            const musicURL = process.env.REACT_APP_LEGACY_ROOT_URI + correctMusic.music\n            const media = newMedia( correctMusic.title || '???', musicURL, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, media )\n\n            const indexes = pickIndexes( nbAnswer + 1, musics.length ).filter( index => index != correctIndex ).slice( 0, nbAnswer - 1 )\n            indexes.push( correctIndex )\n            shuffle( indexes )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist && music.artist.name ? music.artist.name : '???', music.title || '???', index === correctIndex )\n            }\n\n            break\n        }\n        \n    }\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// api game\n\nexport async function buildQuestionsFromApi( game: Game ) {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/game/new`\n    requestURL = `${requestURL}?nb_question=${game.settings.nbQuestion}`\n    requestURL = `${requestURL}&nb_answer=${game.settings.nbAnswer}`\n    requestURL = `${requestURL}&nb_player=${game.settings.nbPlayer}`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'PUT'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching new game: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonResponse;\n    const jsonGame = jsonResponse.game;\n    \n    for ( const jsonQuestion of jsonGame.questions ) {\n        if ( !jsonQuestion ) {\n            continue\n        }\n        const jsonMusic = jsonQuestion.music\n        const jsonTheme = jsonQuestion.theme\n\n        const artist = jsonMusic.artist ? newArtist( jsonMusic.artist.name, jsonMusic.artist.imgUrl ) : undefined\n        const album = jsonMusic.album ? newAlbum( jsonMusic.album.name, jsonMusic.album.imgUrl ) : undefined\n        const media = newMedia( jsonMusic.name, jsonMusic.mp3Url, artist, album )\n        const question: Question = addQuestion( game, jsonTheme.title, media )\n\n        for ( const jsonAnswer of jsonQuestion.answers ) {\n            addAnswer( question, jsonAnswer.text, jsonAnswer.hint, jsonAnswer.correct )\n        }\n    }\n}\n\nexport interface JsonResponse {\n    success: boolean\n    game: JsonGame\n}\n\nexport interface JsonGame {\n    id: number\n    players: JsonPlayer[]\n    questions: JsonQuestion[]\n}\n\nexport interface JsonPlayer {\n    id: number\n    name: string\n    active: boolean\n}\n\nexport interface JsonQuestion {\n    id: number\n    theme: JsonTheme\n    music: JsonMusic\n    answers: JsonAnswer[]\n}\n\nexport interface JsonTheme {\n    title: string\n}\n\nexport interface JsonMusic {\n    id: number\n    name: string\n    mp3Url: string\n    artist?: JsonArtist\n    album?: JsonAlbum\n}\n\nexport interface JsonArtist {\n    id: number\n    name: string\n    imgUrl: string\n}\n\nexport interface JsonAlbum {\n    id: number\n    name: string\n    imgUrl: string\n}\n\nexport interface JsonAnswer {\n    id: number\n    text: string\n    hint: string\n    correct: boolean\n}","import { customAlphabet } from 'nanoid'\n\nimport { newSettings, Settings, SettingsUpdater } from './Settings'\nimport { Player, PlayerId, PlayerUpdater } from './Player'\nimport { addAnswer, isCorrect, Question, QuestionId, QuestionUpdater } from './Question'\nimport { newArtist } from './Artist'\nimport { newAlbum } from './Album'\nimport { range, toTimeString, toZeroPadString } from './Util'\nimport { Media, newMedia } from './Media'\nimport { GameStats, newGameStats } from './GameStats'\nimport { Card, DefaultCards } from './Card'\nimport { flagAnswerAsCorrect, flagAnswerAsIncorrect, flagQuestionAsError, flagQuestionAsMiss, newPlayerStats } from './PlayerStats'\nimport { ANSWER_ID_SUFFIX, DEBUG, DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION, MAX_NB_GAME, PLAYER_ID_SUFFIX, QUESTION_ID_SUFFIX } from './Constants'\nimport { buildDummyQuestions, buildLegacyQuestions, buildTestQuestions, buildQuestionsFromApi } from './Quizz'\nimport { AvatarId } from './Avatar'\n\n// //////////////////////////////////////////////////\n// model\n\nexport const newGameId = customAlphabet( 'ABCDEFGHIJKLMNPQRSTUVWXYZ', 4 )\nexport const newGameCode = customAlphabet( '0123456789', 4 )\n\nexport enum GameStep {\n  SETTINGS = 'SETTINGS',\n  PLAYERS = 'PLAYERS',\n  QUIZZ = 'QUIZZ',\n  SCORES = 'SCORES',\n}\n\nexport type GameId = string\n\nexport interface Game {\n  readonly id: string\n  readonly code: string\n  readonly created: number\n  updated: number\n  step: GameStep\n  settings: Settings\n  players: Player[]\n  questions: Question[]\n  started: boolean\n  questionNumber?: number\n  ended: boolean\n  stats?: GameStats\n}\n\nexport type GameUpdater = ( game: Game ) => Game\nexport type OnGameUpdate = ( gameId: GameId, gameUpdater: GameUpdater ) => void\nexport type OnPlayerUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n// export type OnQuestionUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGame( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Game {\n  return {\n    id: newGameId(),  \n    code: newGameCode(),  \n    created: Date.now(),  \n    updated: Date.now(),\n    step: GameStep.SETTINGS,\n    settings: newSettings( nbPlayer, nbQuestion, nbAnswer ),\n    players: [],\n    questions: [],\n    started: false,\n    ended: false,\n  }\n}\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addPlayer( game: Game, card: Card ): Player {\n  const number = game.players.length + 1\n  const current: Player = {\n    id: PLAYER_ID_SUFFIX + number, \n    number: number,\n    avatarId: number as AvatarId,\n    name: `Player ${toZeroPadString( number, 2 )}`,\n    status: 'active',\n    card: card,\n    stats: newPlayerStats(),\n  }\n  game.players.push( current )\n  console.log( current )\n  return current\n}\n\nexport function addQuestion( game: Game, title: string, media: Media ): Question {\n  const number = game.questions.length + 1\n  const current: Question = {\n    id: ( QUESTION_ID_SUFFIX + number ) * ANSWER_ID_SUFFIX,\n    number: number, \n    status: 'not-played',\n    title: title,\n    media: media,\n    answers: [],\n    playerAnswers: [],\n  }\n  if ( game.questions.length > 0 ) {\n    const previous: Question = game.questions[ game.questions.length - 1 ]\n    previous.nextNumber = current.number\n    current.previousNumber = previous.number\n  }\n  game.questions.push( current )\n  return current\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport function updateSettings( update: SettingsUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    return {\n      ...game,\n      settings: update( game.settings ),\n    }\n  }\n}\n\nexport function updatePlayer( playerId: PlayerId, update: PlayerUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.players ) {\n      return game\n    }\n    return {\n      ...game,\n      players: game.players.map( player => player.id == playerId ? update( player ) : player ),\n    }\n  }\n}\n\nexport function updateQuestion( questionId: QuestionId, update: QuestionUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.questions ) {\n      return game\n    }\n    return {\n      ...game,\n      questions: game.questions.map( question => question.id == questionId ? update( question ) : question ),\n    }\n  }\n}\n\n// //////////////////////////////////////////////////\n// store\n\nconst GAMES = 'games'\n\nexport function clearGames() {\n  localStorage.removeItem( GAMES )\n}\n\nexport function sortGames( games: Game[] ): Game[] {\n  const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n    return right.updated - left.updated\n  } )\n  return sortedGames\n}\n\nexport function sliceGames( games: Game[] ): Game[] {\n  const slicedGames = games.slice( 0, MAX_NB_GAME )\n  return slicedGames\n}\n\nexport function sanitizeGames( games: Game[] ): Game[] {\n  return sliceGames( sortGames( games ) )\n}\n\nexport function storeGames( games: Game[] ): Game[] {\n  const sanitizedGames = games.slice( 0, MAX_NB_GAME )\n  localStorage.setItem( GAMES, JSON.stringify( sanitizedGames ) )\n  return sanitizedGames\n}\n\nexport function loadGames(): Game[] {\n  const games: Game[] = JSON.parse( localStorage.getItem( GAMES ) || '[]' ) || []  \n  return sortGames( games )\n}\n\n// //////////////////////////////////////////////////\n// select\n\nexport function selectGame( games: Game[], gameId: string | undefined ): Game | undefined {\n  if ( !gameId ) {\n    return undefined\n  }\n  const game = gameId ? loadGames().find( g => g.id == gameId ) : undefined\n  console.log(`[select] game #${gameId} : ${ game !== undefined ? 'OK' : 'KO' }`)\n  return game\n}\n\nexport function selectQuestion( game: Game | undefined, questionParam: string | undefined ): Question | undefined {\n  if ( !game || !questionParam ) {\n    return undefined\n  }\n  const questionNumber: number = parseInt( questionParam )\n  const question = game.questions && questionNumber ? game.questions.find( question => question.number == questionNumber ) : undefined\n  console.log(`[select] question #${questionNumber} : ${ question !== undefined ? 'OK' : 'KO' }`)\n  return question\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function hasPlayers( game: Game ): boolean {\n  return ( game !== undefined && game.players !== undefined && game.players.length > 0 )\n}\n\nexport function hasQuestions( game: Game ): boolean {\n  return ( game !== undefined && game.questions !== undefined && game.questions.length > 0 )\n}\n\nexport function isSetUp( game: Game ): boolean {\n  return hasPlayers( game ) && hasQuestions( game )\n}\n\nexport function isSettingsPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || isSetUp( game ) \n}\n\nexport function isPlayersPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isQuizzPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isScoresPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.started || !isSetUp( game )\n}\n\nexport function OnStep( gameStep: GameStep ): GameUpdater {\n  return ( game: Game ): Game => {\n      console.log( `[on-step] ${game.id} - ${gameStep}` )\n      \n      //\n      // move to new step\n      //\n    \n      game.step = gameStep\n    \n      return game\n  }\n}\n\nexport function onSetUp( game: Game ): Game {\n  console.log( `[on-set-up] ${game.id}` )\n\n  //\n  // build questions ( based on game type )\n  //\n\n  console.log(process.env)\n  console.log(`game type = ${process.env.REACT_APP_GAME_TYPE}`)\n  if ( process.env.REACT_APP_GAME_TYPE == 'dummy' ) {\n    game = buildDummyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'test' ) {\n    game = buildTestQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'legacy' ) {\n    game = buildLegacyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'api' ) {\n    buildQuestionsFromApi( game )\n  } else {\n    console.log( `[on-set-up] missing game type >>> FALLBACK to 'legacy'` )\n    game = buildLegacyQuestions( game )\n  }\n\n  //\n  // create default players\n  //\n\n  const nbPlayer = game.settings.nbPlayer\n  range( nbPlayer ).forEach( index => addPlayer( game, DefaultCards[ index % DefaultCards.length ] ) )  \n  \n  //\n  // finally move to players step\n  //\n\n  game.step = GameStep.PLAYERS\n\n  return game\n}\n\nexport function onStartGame( game: Game ): Game {\n  console.log( `[on-start-game] ${game.id}` )\n\n  if ( !game.questions || game.questions.length == 0 ) {\n    return game\n  }\n\n  //\n  // flag game as started\n  //\n\n  game.started = true\n\n  //\n  // select first question\n  //\n\n  game.questionNumber = game.questions[0].number\n\n  //\n  // prepare game stats\n  //\n\n  game.stats = newGameStats( game.settings.nbQuestion ) \n  \n  //\n  // finally move to quizz step\n  //\n\n  game.step = GameStep.QUIZZ\n\n  return game\n}\n\nexport function onAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-answers] ${game.id} - ${question.number}` )\n\n    const nbPlayers = game.players.length\n    let nbPoint = nbPlayers\n\n    for ( const playerAnswer of question.playerAnswers ) {\n      const player = game.players.find( player => player.id === playerAnswer.playerId )\n      if ( player ) {\n        const correct = isCorrect( question, playerAnswer )\n        if ( correct ) {\n          flagAnswerAsCorrect( player.stats, question.id, playerAnswer.answerId, nbPoint )\n        } else {\n          flagAnswerAsIncorrect( player.stats, question.id, playerAnswer.answerId, -nbPoint )\n        }\n      }\n      if ( nbPoint > 1 ) {\n        nbPoint--\n      }\n    }\n\n    for ( let player of game.players ) {\n      let miss = true\n      for ( const playerAnswer of question.playerAnswers ) {\n        if ( player.id === playerAnswer.playerId ) {\n          miss = false\n          break\n        }\n      }\n      if ( miss ) {\n        flagQuestionAsMiss( player.stats, question.id )\n      }\n    }\n\n    return game\n  }\n}\n\nexport function onErrorAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question-error] ${game.id} - ${question.number}` )\n\n    for ( const player of game.players ) {\n      flagQuestionAsError( player.stats, question.id )\n    }\n\n    return game\n  }\n}\n\nexport function onQuestionNumber( questionNumber: number ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question] ${game.id} - ${questionNumber}` )\n\n    if ( !game.questions ) {\n      throw Error( \"missing questions!\" )\n    }\n    const question = game.questions.find( question => question.number === questionNumber )\n    if ( !question ) {\n      throw Error( \"unknwon question!\" )\n    }\n\n    //\n    // update stats\n    //\n\n    if ( game.stats ) {\n      game.stats.nbCompleted++\n      game.stats.progress = Math.ceil( game.stats.nbCompleted * 100 / game.stats.nbQuestion )\n    }\n\n    //\n    // move to next question\n    //\n\n    game.questionNumber = question.number\n\n    return game\n  }\n}\n\nexport function onEndGame( game: Game ): Game {\n  console.log( `[on-end-game] ${game.id}` )\n\n  //\n  // flag game as ended\n  //\n\n  game.ended = true\n  \n  //\n  // finally move to scores step\n  //\n\n  game.step = GameStep.SCORES\n\n  return game\n}\n\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface GameStats {\n  readonly nbQuestion: number\n  nbCompleted: number\n  progress: number\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGameStats( nbQuestion: number ): GameStats {\n  return {\n    nbQuestion: nbQuestion,\n    nbCompleted: 0,  \n    progress: 0,\n  }\n}\n","import { Game, GameStep } from './Game'\n\n// //////////////////////////////////////////////////\n// navigate\n\nexport function toHomePage(): string {\n  return `/`\n}\n\nexport function toSettingsPage( game: Game ): string {\n  return `/game/${game.id}/settings`\n}\n\nexport function toPlayersPage( game: Game ): string {\n  return `/game/${game.id}/players`\n}\n\nexport function toQuizzPage( game: Game ): string {\n  if ( !game.questionNumber ) {\n    return `/game/${game.id}/start`    \n  }\n  return `/game/${game.id}/question/${game.questionNumber}`\n}\n\nexport function toScoresPage( game: Game ): string {\n  return `/game/${game.id}/scores`\n}\n\nexport function toGamePage( game: Game | undefined ): string {\n  if ( game ) {\n    switch ( game.step ) {\n      case GameStep.SETTINGS:\n        return toSettingsPage( game )\n      case GameStep.PLAYERS:\n        return toPlayersPage( game )\n      case GameStep.QUIZZ:\n        return toQuizzPage( game )\n      case GameStep.SCORES:\n        return toScoresPage( game )\n    }  \n  }\n  return toHomePage()\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\n\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport MenuIcon from '@mui/icons-material/Menu'\n\nimport { Game, GameStep, OnGameUpdate, OnStep } from '../data/Game'\nimport { isSettingsPageDisabled, isPlayersPageDisabled, isQuizzPageDisabled, isScoresPageDisabled } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport {  Group, Home, MilitaryTech, MusicNote, Settings } from '@mui/icons-material'\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from '@mui/material'\nimport { HEADER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    gameStep?: GameStep\n    game?: Game\n    updateGame?: OnGameUpdate\n    onPrevious?: () => void\n    onNext?: () => void\n}\n\nconst Header = ( props: Props ) => {\n    const { title, gameStep, game, updateGame, onPrevious, onNext } = props\n\n    const navigate = useNavigate()\n\n    // title helpers\n\n    const homeTitle = 'Home'\n    const settingsTitle = 'Settings'\n    const playersTitle = 'Players'\n    const quizzTitle = 'Quizz'\n    const scoresTitle = 'Scores'\n\n    // selected helpers\n\n    const isHomeSelected = gameStep === undefined\n    const isSettingsSelected = gameStep == GameStep.SETTINGS\n    const isPlayersSelected = gameStep == GameStep.PLAYERS\n    const isQuizzSelected = gameStep == GameStep.QUIZZ\n    const isScoresSelected = gameStep == GameStep.SCORES\n\n    // disabled helpers\n\n    const isHomeDisabled = false\n    const isSettingsDisabled = isSettingsPageDisabled( game )\n    const isPlayersDisabled = isPlayersPageDisabled( game )\n    const isQuizzDisabled = isQuizzPageDisabled( game )\n    const isScoresDisabled = isScoresPageDisabled( game )\n\n    // update helpers\n\n    const updateGameStep = ( gameStep: GameStep ) => {\n        if ( game && updateGame ) {\n            updateGame( game.id, OnStep( gameStep ) )\n        }\n    }\n\n    // user events\n\n    const onHomePage = !isHomeSelected ? onUserEvent( () => navigate( toHomePage() ) ) : undefined\n    const onSettingsPage = !isSettingsSelected ? onUserEvent( () => updateGameStep( GameStep.SETTINGS ) ) : undefined\n    const onPlayersPage = !isPlayersSelected ? onUserEvent( () => updateGameStep( GameStep.PLAYERS ) ) : undefined\n    const onQuizzPage = !isQuizzSelected ? onUserEvent( () => updateGameStep( GameStep.QUIZZ ) ) : undefined\n    const onScoresPage = !isScoresSelected ? onUserEvent( () => updateGameStep( GameStep.SCORES ) ) : undefined\n\n    // keyboard shortcuts\n\n    if ( HEADER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case 'ArrowLeft':\n                    if ( onPrevious ) {\n                        console.log( `header >>> key \"${key}\" >>> onPrevious()`);\n                        onPrevious();\n                        return true;\n                    }\n                    break;\n                case 'ArrowRight':\n                    if ( onNext ) {\n                        console.log( `header >>> key \"${key}\" >>> onNext()`);\n                        onNext();\n                        return true;\n                    }\n                    break;\n            } \n            return false;\n        } ), [ onPrevious, onNext ] );\n        \n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] );\n    }\n\n    // menu \n\n    const [ menuElement, setMenuElement ] = React.useState( null );\n    const open = Boolean( menuElement );\n    const onMenuOpen = ( event: any ) => {\n        setMenuElement( event.currentTarget );\n    };\n    const onMenuClose = () => {\n        setMenuElement( null );\n    };\n\n    // title \n\n    const finalTitle = title ? title : \n                        isHomeSelected ? homeTitle : \n                        isSettingsSelected ? settingsTitle : \n                        isPlayersSelected ? playersTitle : \n                        isQuizzSelected ? quizzTitle : \n                        isScoresSelected ? scoresTitle : ''\n\n    return (\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\n            <AppBar position=\"static\" color=\"transparent\">\n                <Toolbar>\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        {/* menu */}\n\n                        <div>\n\n                            { game && (\n                                <>\n\n                                    {/* icon */}\n        \n                                    <IconButton\n                                        id=\"menu-button\"\n                                        aria-label=\"menu\"\n                                        aria-controls={ open ? 'basic-menu' : undefined }\n                                        aria-expanded={ open ? 'true' : undefined }\n                                        aria-haspopup=\"true\"\n                                        onClick={onMenuOpen}\n                                    >\n                                        <MenuIcon />\n                                    </IconButton>\n        \n                                    {/* menu items */}\n        \n                                    <Menu\n                                        id=\"basic-menu\"\n                                        anchorEl={menuElement}\n                                        open={open}\n                                        onClose={onMenuClose}\n                                        MenuListProps={{\n                                        'aria-labelledby': 'basic-button',\n                                        }}\n                                    >\n        \n                                        {/* home */}\n        \n                                        <MenuItem selected={isHomeSelected} disabled={isHomeDisabled} onClick={onHomePage}>\n                                            <ListItemIcon>\n                                                <Home fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{homeTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* settings */}\n        \n                                        <MenuItem selected={isSettingsSelected} disabled={isSettingsDisabled} onClick={onSettingsPage}>\n                                            <ListItemIcon>\n                                                <Settings fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{settingsTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* players */}\n        \n                                        <MenuItem selected={isPlayersSelected} disabled={isPlayersDisabled} onClick={onPlayersPage}>\n                                            <ListItemIcon>\n                                                <Group fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{playersTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* quizz */}\n        \n                                        <MenuItem selected={isQuizzSelected} disabled={isQuizzDisabled} onClick={onQuizzPage}>\n                                            <ListItemIcon>\n                                                <MusicNote fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{quizzTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* scores */}\n        \n                                        <MenuItem selected={isScoresSelected} disabled={isScoresDisabled} onClick={onScoresPage}>\n                                            <ListItemIcon>\n                                                <MilitaryTech fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{scoresTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                    </Menu>\n                                \n                                </>\n                            ) }\n\n                        </div>\n\n                        {/* title */}\n\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\n\n                        {/* Previous & Next */}\n                        \n                        <div>\n\n                            { onPrevious && (\n                                <IconButton \n                                    aria-label=\"Previous\" \n                                    color=\"info\"\n                                    onClick={onPrevious}\n                                >\n                                    <SkipPreviousIcon />\n                                </IconButton>\n                            ) }\n                            \n                            { onNext && (\n                                <IconButton \n                                    aria-label=\"Next\" \n                                    color=\"info\"\n                                    onClick={onNext}\n                                >\n                                    <SkipNextIcon />\n                                </IconButton>\n                            ) }\n\n                        </div>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { Game } from '../data/Game'\n\ninterface Props {\n}\n\nconst Footer = ( props: Props ) => {\n\n    return (\n        <>\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"transparent\">\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\n                            @mnezic\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Box> */}\n        </>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport Header from './Header'\nimport Footer from './Footer'\n\ninterface Props {\n    title?: string\n    children: any\n    onNext?: () => void\n}\n\nconst Page = ( props: Props ) => {\n    const { title, children, onNext } = props\n    \n    return (\n        <div className={`page`}>\n            <Header title={title} onNext={onNext}/>\n            {children}\n            <Footer />\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\n\nimport { makeStyles } from '@mui/styles'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\nimport PersonIcon from '@mui/icons-material/Person'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\n\nimport { Game } from '../data/Game'\nimport { onUserEvent, toDateTimeString } from '../data/Util'\nimport { Chip, Stack } from '@mui/material';\n\nconst useStyles = makeStyles( () => ( {\n    gameCard: {\n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'space-between',\n        padding: '10px 20px',\n        borderRadius: '10px',\n        border: '2px solid #ddd',        \n        \"&:hover\": {\n            border: '2px solid gold',        \n            backgroundColor: '#ffd70029'\n        }\n    },\n    gameLine: {\n        width: '100%', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'space-between'\n    },\n    gameItem: {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    },\n} ) );\n\ninterface Props {\n    game?: Game\n    startGame?: () => void\n    resumeGame?: ( game: Game ) => void\n    deleteGame?: ( game: Game ) => void\n}\n\nconst GameCard = ( props: Props ) => {\n    const { game, startGame, resumeGame, deleteGame } = props\n    const classes = useStyles()\n\n    if ( !game ) {\n\n        const onStart = startGame ? onUserEvent( () => startGame() ) : undefined\n\n        return (\n            <div title=\"Start New Game\" className={`${classes.gameCard} selectable`} onClick={onStart}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><b>Start New Game</b></div>\n                    <div> </div>\n                </div>\n                <div className={classes.gameLine}> \n                    <div> </div>\n                    <SkipNextIcon style={{ margin: '20px' }} color=\"primary\"/>\n                    <div> </div>\n                </div>\n            </div>\n        )\n    }\n\n    // user events\n\n    const onResume = resumeGame ? onUserEvent( () => resumeGame( game ) ) : undefined\n    const onDelete = deleteGame ? onUserEvent( () => deleteGame( game ) ) : undefined\n\n    const progress = game.ended ? 100 : game.stats ? game.stats.progress : 0\n    const state = game.ended ? 'ended' : game.stats ? `${Math.round(game.stats.progress)}%` : 'not started'\n\n    return (        \n        <div title=\"Resume Game\" className={`${classes.gameCard} selectable`} onClick={onResume}>\n            <div className={classes.gameLine}> \n                <div className={classes.gameItem}><b>Game {game.id}</b></div>\n\n                <div>\n                    <Stack direction=\"row\" spacing={1} style={{ opacity: '0.7' }}>\n                        { game.ended && <Chip label=\"Ended\" color=\"success\" /> }\n                        { !game.ended && game.stats && <Chip label={`${Math.round(game.stats.progress)}%`} color=\"primary\" /> }\n                        { !game.ended && !game.stats && <Chip label=\"Not started\" color=\"warning\" /> }\n                    </Stack>\n                </div>\n\n                <IconButton title=\"Delete Game\" onClick={onDelete}>\n                    <CloseIcon />\n                </IconButton>\n\n            </div>\n            <div style={{ marginLeft: '5%', width: '95%' }}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbPlayer} players</div>\n                    <div className={classes.gameItem}><MusicNoteIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbQuestion} questions</div>\n                    <div className={classes.gameItem}><CalendarTodayIcon style={{ marginRight: '10px' }} color=\"primary\"/> {toDateTimeString(game.updated)}</div>                \n                </div>\n                <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n                    <Box sx={{ height: '10px', width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <LinearProgress variant=\"determinate\" value={progress} valueBuffer={100}/>\n                    </Box>\n                </Box>\n            </div>\n        </div>\n    )\n}\n\nexport default GameCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\n\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n    title?: string\n    onNext: () => void\n}\n\nconst NextButton = ( props: Props ) => {\n    const { title, onNext } = props\n    const description = title && title != '' ? title : 'Next'   \n    \n    // user events\n\n    const onClick = onUserEvent( onNext )\n\n    return (\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\n            <SkipNextIcon />\n        </IconButton>\n    )\n}\n\nexport default NextButton","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Grid from '@mui/material/Grid'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport { Game, GameId, GameStep, newGame, OnGameUpdate } from '../data/Game'\nimport { toGamePage } from '../data/Navigate'\n\nimport Page from '../component/Page'\nimport GameCard from '../component/GameCard'\nimport NextButton from '../component/NextButton'\nimport { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'\n\ninterface Props {\n    games: Game[]\n    addGame: ( game: Game ) => void\n    updateGame: OnGameUpdate\n    deleteGames: ( gameIds: GameId[] ) => void\n}\n\nconst HomePage = ( props: Props ) => {\n    const { games, addGame, updateGame, deleteGames } = props\n\n    const navigate = useNavigate()\n\n    // update helpers\n\n    const startGame = () => {\n        console.log( `[start-game]` )\n        const game = newGame()\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const resumeGame = ( game: Game ) => {\n        console.log( `[resume-game] ${game.id}` )\n        updateGame( game.id, ( game: Game ) => {\n            game.updated = Date.now()\n            if ( game.ended ) {\n                game.step = GameStep.SCORES    \n            } else if ( game.started ) {                \n                game.step = GameStep.QUIZZ\n            }            \n            return game\n        } )\n        navigate( toGamePage( game ) )\n    }\n\n    const deleteGame = ( game: Game ) => {\n        deleteGames( [ game.id ] )\n    }\n\n    const deleteAllGames = () => {\n        var allGameIds: GameId[] = []\n        for ( const game of games ) {\n            allGameIds.push( game.id )\n        }\n        deleteGames( allGameIds )\n    }\n\n    //\n    // clean old games\n    //\n\n    React.useEffect( () => {\n        var oldGameIds: GameId[] = []\n        for ( const game of games ) {\n            if ( game.ended ) {\n                const delta = Date.now() - game.updated\n                if ( delta > /* 30 days */ 30 * 24 * 60 * 60 * 1000 ) {\n                    oldGameIds.push( game.id )\n                }\n            }\n        }\n        if ( oldGameIds.length > 0 ) {\n            deleteGames( oldGameIds )\n        }\n    }, [] )\n\n    //\n    // sort games\n    //\n\n    const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n        return right.updated - left.updated\n    } )\n\n    return (\n        <Page title=\"Amnezic\" onNext={startGame}>\n            \n\n            {/* new game */}\n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"New Game\" onNext={startGame}/>\n            </div>\n\n            {/* prevous game */}\n\n            <Accordion>\n                \n                <AccordionSummary expandIcon={<ExpandMoreIcon />} >\n                    Previous games\n                </AccordionSummary>\n                \n                <AccordionDetails>\n                    \n                    <Grid container spacing={2}>\n\n                        {\n                            (\n                                <>\n                                    {sortedGames.map( game => {\n                                        return (\n                                            <Grid key={game.id} item xs={12} textAlign=\"left\">\n                                                <GameCard\n                                                    game={game}\n                                                    resumeGame={resumeGame}\n                                                    deleteGame={deleteGame}\n                                                />\n                                            </Grid>\n                                        )\n                                    })}                        \n                                </>\n                            )\n                        }\n\n                        <Grid item xs={12} textAlign=\"right\">\n\n                            {/* clear previous games */}\n\n                            <IconButton\n                                title=\"Delete all games\" \n                                color=\"default\" \n                                disabled={games.length == 0} \n                                onClick={deleteAllGames}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n\n                        </Grid>\n\n                    </Grid>\n\n                </AccordionDetails>\n                \n            </Accordion>\n\n        </Page>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { AvatarId } from '../data/Avatar'\n\nimport { PlayerId } from '../data/Player'\n\ninterface Props {\n    id: AvatarId\n    size: AvatarSize\n    disabled?: boolean\n    selected?: boolean\n    onClick?: () => void\n}\n\nexport enum AvatarSize {\n    XS = 'XS',\n    S = 'S',\n    M = 'M',\n    L = 'L',\n    XL = 'XL',\n}\n\nconst PlayerAvatar = ( props: Props ) => {\n    const { id, size, disabled, selected, onClick } = props\n\n    let avatarClassNames = `avatar`\n    avatarClassNames = `${avatarClassNames} avatar-${id}`\n    avatarClassNames = `${avatarClassNames} avatar-${size}`    \n    if ( disabled ) {\n        avatarClassNames = `${avatarClassNames} disabled`\n    }\n    if ( selected ) {\n        avatarClassNames = `${avatarClassNames} selected`\n    }\n    if ( onClick ) {\n        avatarClassNames = `${avatarClassNames} selectable`\n    }\n\n    return (\n        <div className={avatarClassNames} onClick={onClick}></div>\n    )\n}\n\nexport default PlayerAvatar\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport Header from './Header'\nimport Footer from './Footer'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    gameStep: GameStep\n    game: Game\n    updateGame: ( gameId: string, update: ( game: Game ) => Game ) => void\n    onPrevious?: () => void\n    onNext?: () => void\n    children: any\n}\n\nconst GamePage = ( props: Props ) => {\n    const { title, gameStep, game, updateGame, onPrevious, onNext, children } = props\n\n    const navigate = useNavigate()\n    \n    React.useEffect( () => { \n        if ( game.step !== gameStep ) {\n            console.log(`[effect] INVALID game step! ( current step: ${gameStep}, game step: ${game.step} )>>> NAVIGATE`)\n            navigate( toGamePage( game ), { replace: true } )    \n        }\n    }, [ game ] )\n    \n    return (\n        <>\n            <div className={`page step-${gameStep.toLowerCase()}`}>\n                <Header title={title} gameStep={gameStep} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}/>\n                {children}\n                <Footer />\n            </div>\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#eee', padding: '20px' }}>{JSON.stringify(game,undefined,4)}</pre>}\n        </>\n    )\n}\n\nexport default GamePage","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport PersonIcon from '@mui/icons-material/Person'\nimport QuizIcon from '@mui/icons-material/Quiz'\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\n\nimport { Settings } from '../data/Settings'\nimport { Game, GameStep, OnGameUpdate, selectGame, updateSettings, onSetUp } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { INCREMENT_NB_ANSWER_PER_QUESTION, INCREMENT_NB_PLAYER, INCREMENT_NB_QUESTION, MAX_NB_ANSWER_PER_QUESTION, MAX_NB_PLAYER, MAX_NB_QUESTION, MIN_NB_ANSWER_PER_QUESTION, MIN_NB_PLAYER, MIN_NB_QUESTION } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst SettingsPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n\n    if ( !game ) {\n        return null\n    }\n\n    // current state\n\n    const settings = game.settings\n\n    const nbPlayer = settings.nbPlayer\n    const nbPlayerIncrement = INCREMENT_NB_PLAYER\n    const lessPlayerDisabled = nbPlayer <= MIN_NB_PLAYER\n    const morePlayerDisabled = nbPlayer >= MAX_NB_PLAYER\n\n    const nbQuestion = settings.nbQuestion\n    const nbQuestionIncrement = INCREMENT_NB_QUESTION\n    const lessQuestionDisabled = nbQuestion <= MIN_NB_QUESTION\n    const moreQuestionDisabled = nbQuestion >= MAX_NB_QUESTION\n\n    const nbAnswer = settings.nbAnswer\n    const nbAnswerIncrement = INCREMENT_NB_ANSWER_PER_QUESTION\n    const lessAnswerDisabled = nbAnswer <= MIN_NB_ANSWER_PER_QUESTION\n    const moreAnswerDisabled = nbAnswer >= MAX_NB_ANSWER_PER_QUESTION\n\n    // update helpers\n\n    const updateNbPlayer = ( nbPlayer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbPlayer = nbPlayer\n            return settings \n        } ) )\n    }\n\n    const updateNbQuestion = ( nbQuestion: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbQuestion = nbQuestion\n            return settings \n        } ) )\n    }\n\n    const updateNbAnswer = ( nbAnswer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbAnswer = nbAnswer\n            return settings \n        } ) )\n    }\n\n    const onNext = () => {\n        updateGame( game.id, onSetUp )\n    }\n\n    // user events )\n\n    const lessPlayer = lessPlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer - nbPlayerIncrement ) )\n    const morePlayer = morePlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer + nbPlayerIncrement ) )\n\n    const lessQuestion = lessQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion - nbQuestionIncrement ) )\n    const moreQuestion = moreQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion + nbQuestionIncrement ) )\n\n    const lessAnswer = lessAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer - nbAnswerIncrement ) )\n    const moreAnswer = moreAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer + nbAnswerIncrement ) )\n\n    return (\n        <GamePage gameStep={GameStep.SETTINGS} game={game} updateGame={updateGame} onNext={onNext}>\n            \n            <Grid container spacing={2}>\n\n                {/* nb players */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                > \n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessPlayerDisabled} \n                        onClick={lessPlayer}\n                    >\n                        - {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> \n                    {nbPlayer} {nbPlayer > 1 ? 'players' : 'player'}\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={morePlayerDisabled} \n                        onClick={morePlayer}\n                    >\n                        + {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb questions */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessQuestionDisabled} \n                        onClick={lessQuestion}\n                    >\n                        - {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <MusicNoteIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbQuestion} questions\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreQuestionDisabled} \n                        onClick={moreQuestion}\n                    >\n                        + {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb answer per question */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessAnswerDisabled} \n                        onClick={lessAnswer}\n                    >\n                        - {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <QuizIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbAnswer} answers / question\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreAnswerDisabled} \n                        onClick={moreAnswer}\n                    >\n                        + {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default SettingsPage","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst ClubIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 12C2 16 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 15 17 18 15 18 12 18 7 14 7 12 9 14 7 15 2 10 2 5 2 6 7 8 9 6 7 2 7 2 12z\"/>\n        </svg>\n    )\n}\n\nexport default ClubIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst DiamondIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 15 13 19 10 15 7 13 5 10 0 7 5 5 7 1 10 5 13 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default DiamondIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst CircleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19C15 19 19 15 19 10 19 5 15 1 10 1 5 1 1 5 .991 9.99 1 15 5 19 10 19z\"/>\n        </svg>\n    )\n}\n\nexport default CircleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst HeartIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 19 12 19 8 19 2 12 0 10 6 8 0 1 2 1 8 1 12 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default HeartIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SpadeIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 11C2 15 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 14 17 18 15 18 11 18 7 12 7 10.023.039 8 7 2 7 2 11z\"/>\n        </svg>\n    )\n}\n\nexport default SpadeIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SquareIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19 19 19 19 1 1 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default SquareIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst StarIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M9.99.991 12.751 7.04 17.992 7.003 13.953 11.399 15.588 18.03 10.027 14.705 4.316 18.011 5.97 11.493 1.931 7.003 7.472 7.022 10.008.991z\"/>\n        </svg>\n    )\n}\n\nexport default StarIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst TriangleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 19 19 19 10 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default TriangleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst CrossIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 16 4 19 10 13 16 19 19 16 13 10 19 4 16 1 10 7 4 1 1 4 7 10z\"/>\n        </svg>\n    )\n}\n\nexport default CrossIcon\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nimport { Card, CardColor, CardSymbol } from '../data/Card'\nimport ClubIcon from './icon/ClubIcon';\nimport DiamondIcon from './icon/DiamondIcon';\nimport CircleIcon from './icon/CircleIcon';\nimport HeartIcon from './icon/HeartIcon';\nimport SpadeIcon from './icon/SpadeIcon';\nimport SquareIcon from './icon/SquareIcon';\nimport StarIcon from './icon/StarIcon';\nimport TriangleIcon from './icon/TriangleIcon';\nimport CrossIcon from './icon/CrossIcon';\n\ninterface Props {\n    symbol: CardSymbol\n    color: CardColor\n    onClick?: () => void\n}\n\nconst PlayingCardIcon = ( props: Props ) => {\n\n    const { symbol, color, onClick } = props\n\n    switch ( symbol ) {\n        case CardSymbol.CLUB:\n            return <ClubIcon color={color} onClick={onClick} />\n        case CardSymbol.CROSS:\n            return <CrossIcon color={color} onClick={onClick} />\n        case CardSymbol.DIAMOND:\n            return <DiamondIcon color={color} onClick={onClick} />\n        case CardSymbol.CIRCLE:\n            return <CircleIcon color={color} onClick={onClick} />\n        case CardSymbol.HEART:\n            return <HeartIcon color={color} onClick={onClick} />\n        case CardSymbol.SPADE:\n            return <SpadeIcon color={color} onClick={onClick} />\n        case CardSymbol.SQUARE:\n            return <SquareIcon color={color} onClick={onClick} />\n        case CardSymbol.STAR:\n            return <StarIcon color={color} onClick={onClick} />\n        case CardSymbol.TRIANGLE:\n            return <TriangleIcon color={color} onClick={onClick} />\n        default:\n            return null\n    }\n}\n\nexport default PlayingCardIcon","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\n\nimport { Card, CardSize } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\n\ninterface Props {\n    card?: Card\n    cardSize?: CardSize\n    selected?: boolean\n    disabled?: boolean\n    onClick?: () => void    \n}\n\nconst PlayingCard = ( props: Props ) => {\n    const { card, cardSize, selected, disabled, onClick } = props\n\n    if ( card == undefined ) {\n        return (\n            <div className={`card size-${cardSize} card--empty`} onClick={onClick}>\n                <div className=\"card--header\">\n                    <div className=\"card--symbol\"> </div>                \n                </div>\n                <div className=\"card--content\">\n                    <div className=\"card--value\"> </div>\n                    <div className=\"card--symbol\"> </div>\n                </div>\n                <div className=\"card--footer\">\n                    <div className=\"card--symbol\"> </div>\n                </div>\n            </div>\n        )\n    }\n\n    let cardClassNames = `card`\n    if ( card.size ) {\n        cardClassNames = `${cardClassNames} size-${card.size}`\n    }\n    if ( disabled ) {\n        cardClassNames = `${cardClassNames} disabled`\n    }\n    if ( selected ) {\n        cardClassNames = `${cardClassNames} selected`\n    }\n    if ( onClick ) {\n        cardClassNames = `${cardClassNames} selectable`\n    }\n\n    return (\n        <div className={cardClassNames} onClick={onClick}>\n            <div className=\"card--header\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>                \n            </div>\n            <div className=\"card--content\">\n                <div className=\"card--value\">\n                    {card.number ? `${card.number % 10}` : card.value}\n                </div>\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n            <div className=\"card--footer\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlayingCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Card as DataCard, CardColor, CardSize, CardSymbol, DefaultCards } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport PlayingCard from './PlayingCard';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    card: DataCard\n    onSymbolChange: (symbol: CardSymbol) => void\n    onColorChange: (color: CardColor) => void\n    onCardChange: (card: DataCard) => void\n}\n\nconst PlayingCardModal = ( props: Props ) => {\n    const { open, closeModal, card, onSymbolChange, onColorChange, onCardChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n\n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Colors</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardColor).filter( key => key as CardColor != CardColor.GRAY ).map( key => { \n                                const newColor = key as CardColor\n                                return (\n                                    <Grid item key={newColor} xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }} \n                                            className={card.color == newColor ? 'selected' : 'selectable'} \n                                            onClick={() => onColorChange(newColor)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={CardSymbol.CIRCLE}\n                                                color={newColor}\n                                            />\n                                        </div> \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayingCard card={{\n                                ...card,\n                                size: CardSize.XL,\n                            }} \n                        />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Symbols</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardSymbol).map( key => { \n                                const newSymbol = key as CardSymbol\n                                return (\n                                    <Grid key={newSymbol} item xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                                            className={card.symbol == newSymbol ? 'selected' : 'selectable'} \n                                            onClick={() => onSymbolChange(newSymbol)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={newSymbol}\n                                                color={CardColor.GRAY}\n                                            />\n                                        </div>                                                \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    {/* symbols */}\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                        <Typography>\n                            <b>Pre-defined</b>\n                        </Typography>                                \n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        {\n                            DefaultCards.map( defaultCard => {\n                                return (\n                                    <PlayingCard card={{\n                                            ...defaultCard,\n                                            number: card.number,\n                                            value: card.value,\n                                            size: CardSize.XS,\n                                        }}\n                                        onClick={() => onCardChange(defaultCard)} \n                                    />\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default PlayingCardModal","import { MAX_NB_AVATAR } from \"./Constants\"\nimport { range } from \"./Util\"\n\nexport type AvatarId = number\n\nexport const ALL_AVATAR_IDS = range( MAX_NB_AVATAR ).map( i => i + 1 )","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport { ALL_AVATAR_IDS, AvatarId } from '../data/Avatar';\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    avatarId: AvatarId\n    onAvatarChange: (avatarId: AvatarId) => void\n}\n\nconst AvatarModal = ( props: Props ) => {\n    const { open, closeModal, avatarId, onAvatarChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayerAvatar id={avatarId} size={AvatarSize.XL} />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={8} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Avatars</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            ALL_AVATAR_IDS.map( newAvatarId => { \n                                return (\n                                    <Grid key={newAvatarId} item xs={3}>\n                                        <PlayerAvatar \n                                            id={newAvatarId} \n                                            size={AvatarSize.M}\n                                            selected={avatarId == newAvatarId} \n                                            onClick={() => onAvatarChange(newAvatarId)}\n                                        />\n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default AvatarModal","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Typography } from '@mui/material'\nimport PlayingCardModal from './PlayingCardModal'\nimport AvatarModal from './AvatarModal'\nimport { AvatarId } from '../data/Avatar'\n\ninterface Props {\n    player: Player \n    avatarSize?: AvatarSize   \n    cardSize?: CardSize\n    game?: Game\n    updateGame?: OnGameUpdate\n}\n\nconst PlayerCard = ( props: Props ) => {\n    const { player, avatarSize, cardSize, game, updateGame } = props\n\n    const [ name, setName ] = React.useState( player.name )\n    const editMode = game !== undefined && updateGame !== undefined\n    \n    const [ playingCardModal, setPlayingCardModal ] = React.useState( false )\n    const openPlayingCardModal = () => setPlayingCardModal(true)\n    const closePlayingCardModal = () => setPlayingCardModal(false)\n    \n    const [ avatarModal, setAvatarModal ] = React.useState( false )\n    const openAvatarModal = () => setAvatarModal(true)\n    const closeAvatarModal = () => setAvatarModal(false)\n\n    if ( !player.number ) {\n        return null\n    }\n\n    //\n    // update helpers\n    //\n\n    const updatePlayerName = ( name: string ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.name = name\n                return player\n            } ) )\n        }\n    }\n\n    const updatePlayerAvatar = ( avatarId: AvatarId ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.avatarId = avatarId\n                return player\n            } ) )\n        }\n    }\n    \n    const updatePlayerCard = ( card: DataCard ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.card = card\n                return player\n            } ) )\n        }\n    }\n\n    //\n    // user events\n    //\n\n    const onNameChange = ( e: any ) => {\n        setName( e.target.value )\n    }\n\n    const onNameBlur = () => {\n        updatePlayerName( name )\n    }\n\n    const onSymbolChange = (symbol: CardSymbol) => {\n        updatePlayerCard( {\n            ...player.card,\n            symbol: symbol\n        } )\n    }\n\n    const onColorChange = (color: CardColor) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: color\n        } )\n    }\n\n    const onCardChange = (card: DataCard) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: card.color,\n            symbol: card.symbol\n        } )\n    }\n\n    const onAvatarChange = (avatarId: AvatarId) => {\n        updatePlayerAvatar( avatarId )\n    }\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n            <Grid container spacing={2}>\n\n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                        <PlayerAvatar \n                            id={player.avatarId} \n                            size={avatarSize || AvatarSize.L}\n                            onClick={editMode ? openAvatarModal : undefined}\n                        />\n                        { editMode && <TextField id=\"standard-basic\" style={{ marginLeft: '10px' }} label=\"Name\" variant=\"standard\" value={name} onChange={onNameChange} onBlur={onNameBlur} /> }\n                        { !editMode && (\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', marginLeft: '10px', marginRight: '10px' }}>\n                                <Typography><b>Name:</b> {name}</Typography> \n                                <Typography><b>Score:</b> {player.stats.score}</Typography> \n                            </div>                            \n                        ) }\n                    </Box> \n                    <PlayingCard card={{\n                            ...player.card,\n                            number: player.number,\n                            size: cardSize || CardSize.S,\n                        }} \n                        onClick={editMode ? openPlayingCardModal : undefined} \n                    />                   \n                </Grid>\n\n                { editMode && (\n                    <PlayingCardModal\n                        open={playingCardModal}\n                        closeModal={closePlayingCardModal}\n                        card={{\n                            ...player.card,\n                            value: `${player.number % 10}`,\n                        }}\n                        onSymbolChange={onSymbolChange}\n                        onColorChange={onColorChange}\n                        onCardChange={onCardChange}\n                    />\n                ) }\n\n                { editMode && (\n                    <AvatarModal\n                        open={avatarModal}\n                        closeModal={closeAvatarModal}\n                        avatarId={player.avatarId}\n                        onAvatarChange={onAvatarChange}\n                    />\n                ) }\n\n            </Grid>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PlayerCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\nimport PlayerCard from '../component/PlayerCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, OnStep } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst PlayersPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game || !game.players ) {\n        return null\n    }\n    \n    // update helpers\n\n    const onNext = () => {    \n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n    }\n\n    return (\n        <GamePage gameStep={GameStep.PLAYERS} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {\n                    (\n                        <>\n                            {game.players.map( player => {\n                                return (\n                                    <Grid key={player.id} item xs={6} textAlign=\"left\">\n                                        <PlayerCard\n                                            game={game}\n                                            player={player}\n                                            updateGame={updateGame}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default PlayersPage","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, onStartGame, selectGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport NextButton from '../component/NextButton'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst StartPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate() \n    \n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        } else if ( game.questionNumber ) {\n            console.log(`[effect] NAVIGATE to question #${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }\n    }, [ game ] ) \n    \n    if ( !game ) {\n        return null\n    }   \n\n    const onNext = () => {\n        updateGame( game.id, onStartGame )\n    }\n\n    return (\n        <GamePage gameStep={GameStep.QUIZZ} game={game} updateGame={updateGame} onNext={onNext}>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"Start Game\" onNext={onNext}/>\n            </div>\n        </GamePage>                \n    )\n}\n\nexport default StartPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\n\nimport { CardMedia, Typography } from '@mui/material'\nimport { Media } from '../data/Media'\nimport musicBackground from '../static/music.png'\n\ninterface Props {\n    media: Media\n}\n\nconst MediaCard = ( props: Props ) => {\n    const { media } = props\n\n    if ( !media ) {\n        return null\n    }\n\n    const mediaImage = media.artist && media.artist.picture ? media.artist.picture : media.album && media.album.picture ? media.album.picture : musicBackground\n    const artistName = media.artist && media.artist.name ? media.artist.name : '-'\n    const albumName = media.album && media.album.title ? media.album.title : '-'\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n                <Typography variant=\"h5\" color=\"text.primary\" component=\"div\" style={{ margin: '5px 10px' }}>\n                    {media.title}\n                </Typography>\n\n                <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\n\n                    <CardMedia\n                        component=\"img\"\n                        sx={{ width: 56, height: 56, margin: '5px 10px' }}\n                        image={mediaImage}\n                    />\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Artist\n                        </Typography>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Album\n                        </Typography>\n\n                    </div>\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {artistName}\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {albumName}\n                        </Typography>\n\n                    </div>\n\n                </Box>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default MediaCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\n\nimport { Game, OnGameUpdate } from '../data/Game'\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport MediaCard from './MediaCard'\nimport { Media } from '../data/Media'\nimport musicBackground from '../static/music.png'\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\n\ninterface Props {\n    questionId: QuestionId\n    media: Media\n    failed: boolean\n    loading: boolean\n    info?: any\n    started: boolean\n    playing: boolean\n    progress: number\n    played: boolean\n    onMusicLoaded: ( nbSeconds:number ) => void\n    onMusicPlaying: () => void\n    onMusicPaused: () => void\n    onMusicEnded: () => void\n}\n\nconst MusicPlayer = ( props: Props ) => {\n    const { questionId, media, loading, info, started, playing, progress, played, onMusicLoaded, onMusicPlaying, onMusicPaused, onMusicEnded } = props\n\n    if ( !questionId && !media ) {\n        return null\n    }\n        \n    const audioRef = React.useRef<HTMLAudioElement>( new Audio( media.music ) )\n\n    // const [ loading, setLoading ] = React.useState( true )\n    // const [ isPlaying, setIsPlaying ] = React.useState( false )\n    // const [ duration, setDuration ] = React.useState( 0 )\n    // const [ currentTime, setCurrentTime ] = React.useState( 0 )\n\n    // let currentPercentage = 0\n    // if ( played ) {\n    //     currentPercentage = 100\n    // } else if ( duration ) {\n    //     currentPercentage = Math.ceil( ( currentTime / duration ) * 100 )\n    // }\n\n    //\n    // music helpers\n    //\n\n    const reset = () => {\n        console.log( 'reset' )\n        // setMusicIsReady( false )\n        // setIsPlaying( false )\n        // setDuration( 0 )\n        // setCurrentTime( 0 )\n    }\n\n    const musicReady = () => {\n        console.log( `musicReady >>> setLoading( false ) + onMusicLoaded( ${audioRef.current.duration} )` )\n        // setMusicIsReady( true )\n        // setLoading( false )\n        onMusicLoaded( audioRef.current.duration )\n    }   \n\n    const playMusic = () => {  \n        if ( started && !playing && !played ) {\n            console.log( `playMusic >>> !playing >>> onMusicPlaying()` )\n            onMusicPlaying()\n        }\n    }\n\n    const pauseMusic = () => {     \n        if ( started && playing && !played ) {\n            console.log( `pauseMusic >>> playing >>> onMusicPaused()` )\n            onMusicPaused()\n        }\n    }\n    \n    const toggleMusic = () => {           \n        if ( started && !played ) {\n            if ( playing ) {\n                console.log( `toggleMusic >>> playing >>> onMusicPaused()` )\n                onMusicPaused()\n            } else {\n                console.log( `toggleMusic >>> not playing >>> onMusicPlaying()` )\n                onMusicPlaying()\n            }\n        } else {\n            console.log( `toggleMusic >>> not started or already played >>> No-Op` )\n        }\n    }\n\n    React.useEffect( () => {\n        if ( audioRef.current ) {\n            if ( playing ) {\n                console.log( `playing >>> audio.play()` )\n                audioRef.current.play()\n            } else {\n                console.log( `!playing >>> audio.pause()` )\n                audioRef.current.pause()\n            }\n        }\n    }, [ playing ] ); \n\n    const lessVolume = () => {\n        console.log( `lessVolume` ) \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.max( 0.1, audioRef.current.volume - 0.1 )\n        } \n    }\n\n    const moreVolume = () => {\n        console.log( `moreVolume` )  \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.min( 1.0, audioRef.current.volume + 0.1 )\n        }\n    }\n\n    const musicEnded = () => {\n        console.log( 'musicEnded >>> onMusicEnded()' )\n        onMusicEnded()\n    }\n\n    //\n    // audio events\n    //\n\n    React.useEffect( () => {\n        \n        if ( audioRef.current ) {\n            console.log(\"pause current music...\")\n            audioRef.current.pause();\n        }\n    \n        if ( !played ) {\n\n            if ( audioRef.current.src != media.music ) {\n                console.log(\"new music...\")\n                audioRef.current = new Audio( media.music )\n                audioRef.current.loop = false\n                audioRef.current.volume = 1.0\n                reset()\n            }\n        \n            const onAudioLoad = () => {\n                console.log( `onAudioLoad >>> setCurrentTime( ${audioRef.current.currentTime} ) + setDuration( ${audioRef.current.duration} )` )\n                // setCurrentTime( audioRef.current.currentTime )\n                // setDuration( audioRef.current.duration )\n            }\n            const onAudioReady = () => {            \n                console.log( 'onAudioReady >>> musicReady' )\n                musicReady()\n            }\n            // const onAudioUpdate = () => {  \n            //     // console.log( `onAudioUpdate >>> setCurrentTime( ${audio.currentTime} )` )\n            //     // setCurrentTime( audioRef.current.currentTime )\n            // }\n            const onAudioEnd = () => {\n                console.log( 'onAudioEnd >>> musicEnded()' )\n                musicEnded()\n            }\n        \n            // listeners\n\n            console.log(\"add listener...\")\n            audioRef.current.addEventListener( 'loadeddata', onAudioLoad )    \n            audioRef.current.addEventListener( 'canplaythrough', onAudioReady )\n            // audioRef.current.addEventListener( 'timeupdate', onAudioUpdate )\n            audioRef.current.addEventListener( 'ended', onAudioEnd )\n\n            // effect cleanup\n            return () => {\n                console.log(\"remove listener...\")\n                audioRef.current.removeEventListener( 'loadeddata', onAudioLoad )    \n                audioRef.current.removeEventListener( 'canplaythrough', onAudioReady )\n                // audioRef.current.removeEventListener( 'timeupdate', onAudioUpdate )\n                audioRef.current.removeEventListener( 'ended', onAudioEnd )\n                reset()\n            }\n        }\n\n        return reset\n\n    }, [ played, questionId ] ); \n\n    const loadingMusic = !played && !started && loading\n    // const musicReady = !played && !started && !loading\n    // const countingDown = !played && musicIsReady && ( seconds > 0 )\n    const playingMusic = !played && started && playing\n    const pausingMusic = !played && started && !playing\n\n    const onPause = playingMusic ? onUserEvent( () => pauseMusic() ) : undefined\n    const onPlay = pausingMusic ? onUserEvent( () => playMusic() ) : undefined\n\n    //\n    // keyboard shortcuts\n    // \n\n    if ( MUSIC_PLAYER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case ' ':\n                    console.log( `music-player >>> key \"${key}\" >>> toggleMusic()`);\n                    toggleMusic();\n                    return true;\n                case 'ArrowUp':\n                    console.log( `music-player >>> key \"${key}\" >>> moreVolume()`);\n                    moreVolume();\n                    return true;\n                case 'ArrowDown':\n                    console.log( `music-player >>> key \"${key}\" >>> lessVolume()`);\n                    lessVolume();\n                    return true;\n            } \n            return false;\n        } ), [ toggleMusic, moreVolume, lessVolume ] );\n\n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] ); \n\n    }  \n\n    //\n    // tooltip\n    //\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent',\n            color: \"rgba(0, 0, 0, 0.87)\",\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    // console.log( `[render] music player: ready=${musicIsReady}, seconds=${seconds}/${delay}, played=${played}` )\n    \n    const icon = started && pausingMusic ? (\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n            <IconButton aria-label=\"play\" onClick={onPlay}>\n                <PlayArrowIcon sx={{ height: 38, width: 38 }}/>\n            </IconButton> \n        </Typography>\n    ) : undefined\n    \n    const onClick = started && playingMusic ? onPause : undefined\n\n    return (\n        <LightTooltip title={played ? <MediaCard media={media} /> : false} >\n            <div \n                style={{ \n                    width: '56px', \n                    height: '56px', \n                    cursor: played ? 'help' : 'auto', \n                    marginRight: '10px', \n                    border: played ? '1px solid #777' : 'none',\n                    borderRadius: '28px', \n                    backgroundColor: played ? 'transparent' : '#eee',\n                    background: played ? media.album ? `url(${media.album.picture})` : `url(${musicBackground})` : 'none', \n                    backgroundSize: '56px 56px' \n                }}\n            >                \n\n                <Box \n                    sx={{ \n                        width: '56px', \n                        height: '56px',\n                        position: 'relative', \n                        display: 'inline-flex', \n                        alignItems: 'center', \n                        justifyContent: 'center',\n                        cursor: onClick ? 'pointer' : 'auto',                        \n                    }} \n                    onClick={onClick}\n                >\n                    \n                    {/* progress */}\n\n                    { !played && loading && <CircularProgress variant=\"indeterminate\"/> }                    \n                    { !played && !loading && started && <CircularProgress size={56} variant=\"determinate\" value={progress} onClick={onClick}/> }\n                    \n                    {/* button or info */}\n\n                    <Box\n                        sx={{\n                            top: 0,\n                            left: 0,\n                            bottom: 0,\n                            right: 0,\n                            position: 'absolute',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                        onClick={onClick}\n                    >\n                        { icon ? icon : info }\n                    </Box>                    \n\n                </Box>\n\n            </div>\n        </LightTooltip>\n    )\n}\n\nexport default MusicPlayer","import React from 'react'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport Paper from '@mui/material/Paper'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport Slide from '@mui/material/Slide';\n\nimport { Game, onAnswers, onErrorAnswers, OnGameUpdate, onQuestionNumber } from '../data/Game'\nimport { Player, PlayerId } from '../data/Player'\nimport { Question, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted, addPlayerAnswer, removePlayerAnswer, hasPlayerAnswer, onQuestionError } from '../data/Question'\nimport { range, onUserEvent } from '../data/Util'\nimport { Alert, Avatar, Badge, Fade, Grow, Tooltip } from '@mui/material'\nimport PlayingCard from './PlayingCard'\nimport { CardSize } from '../data/Card'\nimport { Answer, AnswerId } from '../data/Answer'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar'\nimport { getQuestionAnswerStats, getQuestionStats } from '../data/PlayerStats'\nimport PlayerCard from './PlayerCard'\nimport { withStyles } from '@mui/styles'\nimport MediaCard from './MediaCard'\nimport MusicPlayer from './MusicPlayer'\nimport { DEBUG, MAX_NB_SECONDS_LOADING, MAX_NB_SECONDS_PLAYING, ONE_SECOND } from '../data/Constants'\n\ninterface Props {\n    game: Game\n    question: Question\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate    \n    onNext: () => void\n}\n\nconst QuestionCard = ( props: Props ) => {\n    const { game, question, updateGame, updateQuestion, onNext } = props\n\n    const [ questionId, setQuestionId ] = React.useState( question.id )\n    const [ musicLoading, setMusicLoading ] = React.useState( true )\n    const [ nbSecondsTotal, setNbSecondsTotal ] = React.useState( 0 )\n    const [ nbShownAnswers, setNbShownAnswers ] = React.useState( 0 )\n    const [ musicReady, setMusicReady ] = React.useState( false )\n    const [ countDown, setCountDown ] = React.useState( 3 )\n    const [ musicStarted, setMusicStarted ] = React.useState( false )\n    const [ musicPlaying, setMusicPlaying ] = React.useState( false )\n    const [ nbSecondsPlayed, setNbSecondsPlayed ] = React.useState( 0 )\n    const [ musicEnded, setMusicEnded ] = React.useState( false )\n\n    if ( !game || !question ) {\n        return null\n    }\n\n    React.useEffect( () => {\n        if ( questionId != question.id ) {\n            console.log( `new question >>> setQuestionId( ${question.id} ) + reset()` ) \n            setQuestionId( question.id )\n            reset()\n        }\n    }, [ questionId, question.id ] );\n        \n    const musicError = question.status == 'error'\n    const musicPlayed = musicEnded || question.status == 'played' || question.status == 'completed'\n\n    //\n    // update helpers\n    //\n\n    const hasAnswer = ( playerId: PlayerId, answerId: AnswerId ): boolean => {\n        return hasPlayerAnswer( question, playerId, answerId )\n    }\n\n    const addAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => addPlayerAnswer( question, playerId, answerId ) )    \n    }\n\n    const removeAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => removePlayerAnswer( question, playerId, answerId ) )        \n    }\n\n    const flagQuestionAsFailed = () => {\n        updateQuestion( game.id, question.id, ( question: Question ) => onQuestionError( question ) )  \n        updateGame( game.id, onErrorAnswers( game, question ) )     \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    //\n    // badge\n    //\n\n    const badgeValue = ( value: number | undefined ): string | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `-`\n            } else if ( value > 0 ) {\n                return `+${value}`\n            } else {\n                return `${value}`\n            }\n        }\n        return undefined\n    }\n\n    const badgeColor = ( value: number | undefined ): 'info' | 'success' | 'warning' | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `info`\n            } else if ( value > 0 ) {\n                return `success`\n            } else {\n                return `warning`\n            }\n        }\n        return undefined\n    }\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent', // theme.palette.common.white,\n            color: \"rgba(0, 0, 0, 0.87)\",\n            // boxShadow: theme.shadows[1],\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    //\n    // events\n    //\n\n    const reset = () => {\n        setMusicLoading( true )\n        setNbSecondsTotal( 0 )\n        setNbShownAnswers( 0 )\n        setMusicReady( false )\n        setCountDown( 3 )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const resetOnError = () => {\n        setMusicLoading( false )\n        setNbShownAnswers( 0 )\n    }\n\n    const resetOnPlayed = () => {\n        setNbShownAnswers( question.answers.length )\n    }\n\n    const onMusicLoaded = ( nbSeconds: number ) => {\n        console.log( `onMusicLoaded >>> setMusicLoading( false ) + setNbSeconds( Math.min( ${nbSeconds}, ${MAX_NB_SECONDS_PLAYING} ) )` ) \n        setMusicLoading( false )\n        setNbSecondsTotal( Math.min( Math.ceil( nbSeconds ), MAX_NB_SECONDS_PLAYING ) )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const onMusicFailed = () => {\n        console.log( `onMusicFailed >>> flagQuestionAsFailed() + setMusicLoading( false )` )\n        setMusicLoading( false )\n        flagQuestionAsFailed()\n    }\n\n    const onMusicPlaying = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPlaying >>> setMusicPlaying( true )' ) \n            setMusicPlaying( true )\n        } else {\n            console.log( `onMusicPlaying >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicPaused = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPaused >>> setMusicPlaying( false )' ) \n            setMusicPlaying( false )\n        } else {\n            console.log( `onMusicPaused >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicEnded = () => {\n        console.log( 'onMusicEnded >>> onNext() + reset()' )\n        onNext()        \n        reset() \n    }\n\n    const showNextAnswer = () => {        \n        if ( nbShownAnswers == question.answers.length ) {\n            console.log( 'showNextAnswer >>> setMusicReady( true )' ) \n            setMusicReady( true )\n        } else {            \n            // console.log( `showNextAnswer >>> ${nbShownAnswers} + 1` ) \n            setNbShownAnswers( nbShownAnswers + 1 )\n        }\n    }\n\n    const showCountDown = () => {\n        if ( countDown > 1 ) {\n            // console.log( `showCountDown >>> ${countDown} - 1` ) \n            setCountDown( countDown - 1 )\n        } else {\n            console.log( 'showCountDown >>> setMusicStarted( true ) + setMusicPlaying( true )' ) \n            setCountDown( 0 )\n            setMusicStarted( true )\n            setMusicPlaying( true )\n        }\n    }\n\n    const showNbSecondsPlayed = () => {\n        if ( nbSecondsPlayed < nbSecondsTotal ) {\n            // console.log( `showNbSecondsPlayed >>> ${nbSecondsPlayed} + 1` ) \n            setNbSecondsPlayed( nbSecondsPlayed + 1 )\n        } else {\n            console.log( 'showCountDown >>> pauseMusic()' ) \n            setMusicPlaying( false )\n            setMusicEnded( true )\n            onMusicEnded()\n        }\n    }\n\n    React.useEffect( () => {\n        let timerId: any = undefined;\n        if ( musicError ) {\n            resetOnError()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicPlayed ) {\n            resetOnPlayed()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicLoading ) {\n            // console.log( 'timer >>> musicLoading >>> showMusicLoading' ) \n            timerId = setInterval( onMusicFailed, ONE_SECOND * MAX_NB_SECONDS_LOADING );\n        } else if ( !musicReady ) {\n            // console.log( 'timer >>> !musicReady >>> showNextAnswer' ) \n            timerId = setInterval( showNextAnswer, ONE_SECOND );\n        } else if ( !musicStarted ) {\n            // console.log( 'timer >>> !musicStarted >>> showCountDown' ) \n            timerId = setInterval( showCountDown, ONE_SECOND );\n        } else if ( musicPlaying ) {\n            // console.log( 'timer >>> musicPlaying >>> showNbSecondsPlayed' ) \n            timerId = setInterval( showNbSecondsPlayed, ONE_SECOND );\n        } else {\n            resetOnPlayed()\n            console.log( 'timer >>> ??? >>> STOP' ) \n            clearInterval( timerId );\n            timerId = undefined;\n        }                \n        return () => {\n            timerId && clearInterval( timerId );\n        }\n    }, [ musicLoading, musicError, countDown, nbShownAnswers, musicReady, musicStarted, musicPlaying, nbSecondsPlayed, musicPlayed ] );\n\n    const progress = musicPlayed ? 100 : !musicStarted ? 0 : Math.ceil( Math.min( nbSecondsPlayed, nbSecondsTotal ) * 100 / nbSecondsTotal )\n    const musicPaused = !musicPlayed && musicStarted && !musicPlaying\n    const showHints = progress > 50\n    const countingDown = musicReady && !musicStarted\n\n    let musicPlayerInfo = undefined\n    if ( musicError ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'red' }}>\n                X\n            </Typography>\n        )\n    } else if ( musicLoading || !musicReady || musicPlayed ) {\n        musicPlayerInfo = undefined\n    } else if ( !musicStarted ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'gray' }}>\n                {countDown}\n            </Typography>\n        )\n    } else {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 20, fontWeight: 'bold', color: 'black' }}>\n                {nbSecondsTotal-nbSecondsPlayed}s\n            </Typography>\n        )\n    }\n\n    return (\n        <>  \n\n            {/* warning: music failed */}\n\n            {musicError && (\n                <Alert \n                    severity=\"warning\" \n                    style={{ \n                        position: 'absolute',\n                        width: '500px',\n                        top: '25%',\n                        left: 'calc( 50% - 250px )',\n                        boxShadow: '3px 3px 3px rgb(0,0,0,0.1)',\n                        borderRadius: '10px',\n                    }}\n                >\n                    Could not load music! Please proceed to next question.\n                </Alert>\n            )}\n\n            {/* answers */}\n\n            {\n                question.answers.map( ( answer, index ) => {\n\n                    const shown = index < nbShownAnswers\n                    const hidden = musicError || !shown\n                    const answerNumber = answer.id % 100 \n                    const color = musicPlayed ? answer.correct ? '#00c508' : 'grey' : 'grey'\n                    const backgroundColor = musicPlayed ? answer.correct ? '#00ff131f' : 'white' : 'white'\n                    \n                    return (\n                        <Paper key={answer.id} className=\"answer\" elevation={3} style={{ margin: '2px', opacity: hidden ? '0' : '1', filter: musicPaused ? 'blur(6px)' : 'none', backgroundColor: backgroundColor }}>\n                            <div \n                                style={{\n                                    position: 'relative', \n                                    display: 'inline-flex',\n                                    alignItems: 'center', \n                                    justifyContent: 'space-between',\n                                    width: '100%'\n                                }}\n                            >                                    \n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}>\n                                    <Avatar sx={{ bgcolor: color }} style={{ margin: '10px', padding: '5px', fontSize: '2rem', fontWeight: 'bold' }}>{answer.number}</Avatar>\n                                    <div style={{ display: 'flex', flexDirection:'column', alignItems: 'flex-start', justifyContent: 'left' }}> \n                                        <Typography variant='h5' style={{ lineHeight: '1', fontSize: '2rem', fontWeight: 'bold' }}>{answer.answer}</Typography>\n                                        <Typography variant='subtitle2' style={{ marginLeft: '20px', color: 'gray', lineHeight: '1', fontSize: '1.5rem', opacity: showHints ? '1' : '0' }}>{answer.hint}</Typography>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        top: 0,\n                                        left: 0,\n                                        bottom: 0,\n                                        right: 5,\n                                        position: 'absolute',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-end',\n                                    }}\n                                >\n                                    { ( question.status == 'played' ) && (\n                                        game.players.map( ( player: Player ) => {\n                                            const disabled = hasAnswer( player.id, answer.id )\n                                            const onClick = question.status == 'played' && !disabled ? () => addAnswer( player.id, answer.id ) : undefined\n                                            return (\n                                                <div key={`answer-${answer.id}-${player.id}`} style={{ marginLeft: '5px' }}>\n                                                    <PlayingCard\n                                                        key={`${player.id}-${answer.id}`} \n                                                        card={{\n                                                            ...player.card,\n                                                            number: answer.number,\n                                                            size: CardSize.XS,\n                                                        }}\n                                                        disabled={disabled} \n                                                        onClick={onClick} \n                                                    />\n                                                </div>\n                                            )\n                                        } )\n                                    ) }\n                                </div>\n                            </div>                                \n                        </Paper>\n                    )\n                })\n            } \n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyItems: 'flex-start', marginTop: '15px' }}>\n\n                    {/* music player */}\n\n                    <MusicPlayer \n                        questionId={question.id} \n                        media={question.media}\n                        failed={musicError}\n                        loading={musicLoading}\n                        info={musicPlayerInfo}\n                        started={musicStarted}\n                        playing={musicPlaying} \n                        progress={progress}\n                        played={musicPlayed} \n                        onMusicLoaded={onMusicLoaded}\n                        onMusicPlaying={onMusicPlaying}\n                        onMusicPaused={onMusicPaused}\n                        onMusicEnded={onMusicEnded}\n                    />\n    \n                    {/* selected players answers */}\n\n                    <div style={{ display: 'flex', alignItems: 'center', justifyItems: 'flex-start', justifyContent: 'space-between', marginLeft: '50px' }}>\n                    { \n                        question.playerAnswers.map( playerAnswer => {\n                            const player = game.players.find( player => player.id === playerAnswer.playerId )\n                            if ( !player ) {\n                                return null\n                            }\n                            const answer = question.answers.find( answer => answer.id === playerAnswer.answerId )\n                            if ( !answer ) {\n                                return null\n                            }\n                            const correct = question.status == 'completed' ? answer.correct : undefined\n                            const answerStats = getQuestionAnswerStats( player.stats, question.id, playerAnswer.answerId )\n                            const score = question.status == 'completed' && answerStats ? answerStats.score : undefined\n                            const onClick = question.status == 'played' ? () => removeAnswer( player.id, answer.id ) : undefined                            \n                            return ( \n                                <div key={`selected-${answer.id}-${player.id}`} style={{ transition: 'transform 1000ms cubic-bezier(0, 0, 0.2, 1) 1000ms' }}>                               \n                                    <Badge className='card--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>                                    \n                                        <PlayingCard\n                                            key={`${player.id}-${answer.id}`} \n                                            card={{\n                                                ...player.card,\n                                                number: answer.number,\n                                                size: CardSize.XS,\n                                            }} \n                                            onClick={onClick} \n                                        />\n                                    </Badge>\n                                </div>\n                            )\n                        } )\n                    }\n                    {\n                        range( Math.max( 1, game.settings.nbPlayer - question.playerAnswers.length ) ).map( i => {\n                            return (\n                                <div key={`selected-${i}`} className='card--badge'>     \n                                    <PlayingCard cardSize={CardSize.XS}/>\n                                </div>        \n                            )\n                        } )\n                    }\n                    </div>\n\n                </div>\n\n            </div>\n\n            {/* players */}\n\n            <div className='playerChips'>\n            {\n                sortedPlayers.map( player => {\n                    const tooltipId = `player-tooltip-${player.id}`\n                    const questionStats = getQuestionStats( player.stats, question.id )\n                    const score = question.status == 'completed' && questionStats ? questionStats.score : undefined\n                    const disableTooltip = !musicPlayed\n                    return (\n                        <LightTooltip \n                            key={tooltipId} \n                            title={<PlayerCard player={player} avatarSize={AvatarSize.M} cardSize={CardSize.XS}/>} \n                            disableFocusListener={disableTooltip}\n                            disableHoverListener={disableTooltip}\n                        >\n                            <Badge className='playerChip--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>  \n                                <div className='playerChip' style={{ cursor: musicPlayed ? 'help' : 'auto', }}>\n                                    <span className='playerChip--avatar'><PlayerAvatar key={player.id} id={player.avatarId} size={AvatarSize.S}/></span>\n                                    <span className='playerChip--score'>{player.stats.score}</span>\n                                </div>\n                            </Badge>                            \n                        </LightTooltip>\n                    )\n                } )\n            }\n            </div>\n\n            {/* debug */}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#fff6f2', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span>{musicError?'error':'--'}</span>\n                <span>{musicLoading?'loading':'--'}</span>\n                <span>answers: {nbShownAnswers}/{question.answers.length}</span>\n                <span>{musicReady?'ready':'--'}</span>\n                <span>{countDown}s</span>\n                <span>{musicStarted?'started':'--'}</span>\n                <span>music: {nbSecondsPlayed}s / {nbSecondsTotal}s</span>\n                <span>{progress}%</span>\n                <span>{musicPlaying?'playing':'paused'}</span>\n                <span>{showHints?'hints':'--'}</span>\n                <span>{musicEnded?'ended':'--'}</span>\n                <span>{musicPlayed?'played':'--'}</span>\n            </pre>}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#f2fff6', padding: '20px' }}>{JSON.stringify(question,undefined,4)}</pre>}\n\n        </>\n    )\n}\n\nexport default QuestionCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport NextButton from '../component/NextButton'\n\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nimport GamePage from '../component/GamePage'\nimport QuestionCard from '../component/QuestionCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, selectQuestion, onQuestionNumber, onEndGame, onAnswers } from '../data/Game'\nimport { QuestionId, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted } from '../data/Question'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate\n}\n\nconst QuestionPage = ( props: Props ) => {\n    const { games, updateGame, updateQuestion } = props\n\n    const navigate = useNavigate()\n\n    const { gameId, questionNumber } = useParams()\n    \n    const game = selectGame( games, gameId )\n    const question = selectQuestion( game, questionNumber )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE to home`)\n            navigate( toHomePage() )    \n        } else if ( !question ) {\n            console.log(`[effect] UNKNOWN question! >>> NAVIGATE to home`)\n            navigate( toHomePage() )     \n        } else if ( game.questionNumber != question.number ) {\n            console.log(`[effect] NEW question! >>> NAVIGATE to question ${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }  \n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    \n    if ( !question ) {\n        return null\n    }\n\n    // update helpers\n\n    const musicPlayed = () => {\n        updateQuestion( game.id, question.id, onQuestionPlayed )\n    }\n\n    const musicAnswered = () => {\n        updateGame( game.id, onAnswers( game, question ) )\n        updateQuestion( game.id, question.id, onQuestionCompleted )\n    }\n\n    const updateQuestionNumber = ( questionNumber: number ) => {\n        updateGame( game.id, onQuestionNumber( questionNumber ) )\n    }\n\n    const endGame = () => {\n        updateGame( game.id, onEndGame )\n    }\n\n    // user events\n    \n    const onPrevious = DEBUG && question.previousNumber ? () => {\n        if ( question.previousNumber ) {\n            console.log( `onNext >>> updateQuestionNumber( ${question.previousNumber} )` )\n            updateQuestionNumber( question.previousNumber )\n        }\n    } : undefined\n\n    const onNext = () => {\n        switch ( question.status ) {\n            case 'not-played':\n                console.log( 'onNext >>> musicPlayed()' )\n                musicPlayed()\n                break\n            case 'played':\n                console.log( 'onNext >>> musicAnswered()' )\n                musicAnswered()\n                break\n            case 'error':\n            case 'completed':\n                if ( question.nextNumber ) {\n                    console.log( `onNext >>> updateQuestionNumber( ${question.nextNumber} )` )\n                    updateQuestionNumber( question.nextNumber )\n                } else {\n                    console.log( `onNext >>> endGame()` )\n                    endGame()\n                }\n                break\n        }\n    }\n\n    // title\n\n    const title =  DEBUG ? `Q${question.number} - ${question.title} - ${question.status}` : `Q${question.number} - ${question.title}`\n\n    return (\n        <GamePage title={title} gameStep={GameStep.QUIZZ} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\n            <QuestionCard game={game} question={question} updateGame={updateGame} updateQuestion={updateQuestion} onNext={onNext}/>\n        </GamePage>\n    )\n}\n\nexport default QuestionPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport MilitaryTechIcon from '@mui/icons-material/MilitaryTech'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Accordion, AccordionDetails, AccordionSummary, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material'\nimport { ColorizeRounded } from '@mui/icons-material'\n\ninterface Props {\n    game: Game\n    player: Player\n    position: number\n    color: string\n    medalColor?: string    \n}\n\nconst PlayerScoreCard = ( props: Props ) => {\n    const { game, player, position, color, medalColor } = props\n\n    if ( !player.number ) {\n        return null\n    }\n\n    const prettyPoints = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `+ ${value} pts`\n        } else if ( value < 0 ) {\n            return `- ${-value} pts`\n        } else {\n            return `-`\n        }\n    }\n\n    const prettyPercent = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `${value} %`\n        } else if ( value < 0 ) {\n            return `-${-value} %`\n        } else {\n            return `-`\n        }\n    }\n\n    const nbTotal = player.stats.nbAnswer + player.stats.nbMiss\n    const successPercent = nbTotal > 0 ? player.stats.nbSuccess * 100 / nbTotal : 0\n    const failurePercent = nbTotal > 0 ? player.stats.nbFailure * 100 / nbTotal : 0\n    const missPercent = nbTotal > 0 ? player.stats.nbMiss * 100 / nbTotal : 0\n\n    let sumBySuccessAnswer = 0\n    let sumByFailureAnswer = 0\n    let nbSuccessAnswer = 0\n    let nbFailureAnswer = 0\n    for ( const question of player.stats.questions ) {\n        for ( const answer of question.answers ) {\n            if ( answer.success ) {\n                nbSuccessAnswer++\n                sumBySuccessAnswer += answer.score\n            } else {\n                nbFailureAnswer++\n                sumByFailureAnswer += answer.score\n            }\n        } \n    }    \n    const avgSuccessDelta = nbSuccessAnswer > 0 ? sumBySuccessAnswer / nbSuccessAnswer : 0    \n    const avgFailureDelta = nbFailureAnswer > 0 ? sumByFailureAnswer / nbFailureAnswer : 0\n    const avgDelta = ( nbSuccessAnswer + nbFailureAnswer ) > 0 ? ( sumBySuccessAnswer + sumByFailureAnswer ) / ( nbSuccessAnswer + nbFailureAnswer ) : 0    \n\n    return (\n\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n            >\n                \n                <Grid container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Grid item xs={12}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <div style={{ \n                                    width: '32px',\n                                    borderRadius: '20px',\n                                    border: `4px solid ${medalColor || '#42a5f5'}`,\n                                    color: medalColor || '#42a5f5',\n                                    // boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                    fontSize: '15px',\n                                    fontWeight: 'bold',\n                                    aspectRatio: '1',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    marginRight: '30px',\n                                }}>\n                                    {position}                                   \n                                </div>\n                                <PlayerAvatar id={player.avatarId} size={AvatarSize.M}/>\n                                <Typography style={{ marginLeft: '10px' }} >{player.name}</Typography>\n                                <MilitaryTechIcon style={{ marginLeft: '20px', fontSize: '2.5em', color: medalColor, opacity: medalColor ? '1' : '0' }}/>\n                            </div>\n                            <div style={{ \n                                width: '40px',\n                                borderRadius: '20px',\n                                marginRight: '10px',\n                                backgroundColor: color,\n                                boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                fontSize: '15px',\n                                fontWeight: 'bold',\n                                aspectRatio: '1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}>\n                                {player.stats.score}\n                            </div>\n                        </Box> \n                    </Grid>\n                </Grid>\n\n            </AccordionSummary>\n\n            <AccordionDetails>\n    \n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow sx={{ backgroundColor: '#e3d5ca' }}>\n                                <TableCell>score: {player.stats.score}</TableCell>\n                                <TableCell align=\"right\">gain</TableCell>\n                                <TableCell align=\"right\">nb</TableCell>\n                                <TableCell align=\"right\">%</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">answers:</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess+player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent+failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - succeed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgSuccessDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - failed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgFailureDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">missed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(0)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbMiss}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(missPercent)}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nexport default PlayerScoreCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\nimport ReplayButton from '../component/ReplayButton'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, OnStep, selectGame, newGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { Grid } from '@mui/material'\nimport PlayerScoreCard from '../component/PlayerScoreCard'\nimport { Player } from '../data/Player'\nimport { VictoryChart, VictoryLine, VictoryScatter, VictoryTooltip, VictoryGroup, VictoryVoronoiContainer, VictoryLegend } from 'victory'\nimport { computeVizualiationScoreData } from '../data/PlayerStats'\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    addGame: ( game: Game ) => void\n}\n\nconst ScoresPage = ( props: Props ) => {\n    const { games, updateGame, addGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    const restartNewGame = () => {\n        const game = newGame()\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const onNext = () => {   \n        if ( game.ended ) {\n            navigate( toHomePage() )\n        } else {\n            updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n        }        \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    let previousPosition: number | undefined = undefined\n    let previousScore: number | undefined = undefined\n\n    const colorScale: string[] = [ \n        \"#f29e4c\",\n        \"#f1c453\",\n        \"#efea5a\",\n        \"#b9e769\", \n        \"#83e377\", \n        \"#16db93\", \n        \"#0db39e\", \n        \"#048ba8\", \n        \"#2c699a\", \n        \"#54478c\" \n    ]\n    const medalColorScale: string[] = [ \n        \"gold\",\n        \"grey\",\n        \"brown\" \n    ]\n\n    return (\n        <GamePage gameStep={GameStep.SCORES} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {/* players */}\n\n                {\n                    (\n                        <>\n                            {sortedPlayers.map( ( player, index ) => {\n                                \n                                let position = 1                                \n                                if ( previousPosition !== undefined && previousScore !== undefined ) {\n                                    if ( previousScore > player.stats.score ) {\n                                        position = previousPosition + 1\n                                    } else {\n                                        position = previousPosition\n                                    }\n                                }\n                                previousScore = player.stats.score\n                                previousPosition = position\n\n                                return (\n                                    <Grid key={player.id} item xs={12} textAlign=\"left\">\n                                        <PlayerScoreCard\n                                            game={game}\n                                            player={player}\n                                            position={position}\n                                            color={colorScale[index % colorScale.length]}\n                                            medalColor={position-1 < medalColorScale.length ? medalColorScale[position-1] : undefined}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n                {/* graph */}\n\n                <VictoryChart height={390}> \n\n                    {sortedPlayers.map( ( player, index ) => {\n                        const data = computeVizualiationScoreData( player.stats )\n                        const color = colorScale[index % colorScale.length]\n                        return (\n\n                            <VictoryGroup\n                                key={`player-graph-${player.id}`}\n                                color={color}\n                                labels={({ datum }) => `#${index+1} - ${player.name}: ${datum.tooltip}`}\n                                labelComponent={\n                                    <VictoryTooltip\n                                        style={{ fontSize: 10 }}\n                                    />\n                                }\n                                data={data}\n                            >\n                                <VictoryLine/>\n                                <VictoryScatter\n                                    size={3}\n                                    style={{ data: { fill: color } }}\n                                />\n                            </VictoryGroup>\n                        )\n                    })}\n\n                </VictoryChart>\n\n            </Grid> \n            \n        </GamePage>\n    )\n}\n\nexport default ScoresPage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar';\n\ninterface Props {}\n\nconst AvatarsPage = ( props: Props ) => {\n\n    return (\n        <Page title=\"Avatars\">\n\n            <Grid container spacing={2}>\n\n                { [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20].map(number => {\n\n                    return (\n                        <Grid key={number} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', backgroundColor: '#ddd' }}>\n                            {\n                                Object.keys( AvatarSize ).map(size => {\n                                    return (\n                                        <PlayerAvatar key={`${number}-${size}`} id={number} size={size as AvatarSize} />\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default AvatarsPage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport { CardSymbol, CardSize, CardColor } from '../data/Card'\nimport PlayingCard from '../component/PlayingCard';\n\ninterface Props {}\n\nconst PlayingCardsPage = ( props: Props ) => {\n\n    return (\n        <Page>\n            \n            <h3>Playing Cards</h3>\n\n            <Grid container spacing={2}>\n\n                { Object.keys( CardSymbol ).map(symbol => {\n\n                    return (\n                        <Grid key={symbol} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            {\n                                Object.keys( CardSize ).map(size => {\n                                    return (\n                                        <>\n                                            <PlayingCard key={`${symbol}-${size}-black`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.BLACK,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                            <PlayingCard key={`${symbol}-${size}-red`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.RED,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                        </>\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default PlayingCardsPage","import React from 'react'\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\n\nimport HomePage from './page/HomePage'\nimport SettingsPage from './page/SettingsPage'\nimport PlayersPage from './page/PlayersPage'\nimport StartPage from './page/StartPage'\nimport QuestionPage from './page/QuestionPage'\nimport ScoresPage from './page/ScoresPage'\nimport AvatarsPage from './page/AvatarsPage'\n\nimport { Game, GameUpdater, loadGames, storeGames, clearGames, GameId } from './data/Game'\n\nimport './App.css';\nimport PlayingCardsPage from './page/PlayingCardsPage';\nimport { QuestionId, QuestionUpdater } from './data/Question'\n\nfunction App() {\n\n  //\n  // global state \n  //\n\n  const [ games, setGames ] = React.useState( loadGames() )\n\n  function addGame( game: Game ) {\n      console.log( `[add-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = [ game, ...prev ]\n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGame( game: Game ) {\n      console.log( `[delete-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = prev.filter( g => g.id !== game.id ) \n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGames( gameIds: GameId[] ) {\n      console.log( `[delete-games]` )\n      setGames( prev => {\n        for ( const gameId of gameIds ) {\n          console.log( `[todo] ${gameId}` )\n        }\n        for ( const game of prev ) {\n          console.log( `[before] ${game.id}` )\n        }\n        const newGames = prev.filter( game => gameIds.indexOf( game.id ) === -1 )\n        for ( const game of newGames ) {\n          console.log( `[after] ${game.id}` )\n        }\n        return storeGames( newGames )\n      } )\n  }\n\n  function updateGame( gameId: GameId, update: GameUpdater ) {\n    console.log( `[update-game] ${gameId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => game.id === gameId ? update( game ) : game )\n      return storeGames( newGames )\n    } )\n  }\n\n  function updateQuestion( gameId: GameId, questionId: QuestionId, update: QuestionUpdater ) {\n    console.log( `[update-question] ${gameId} - ${questionId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => {\n        if ( game.id != gameId ) {\n          return game\n        }\n        game.questions = game.questions.map( question => question.id === questionId ? update( question ) : question )\n        return game        \n      } )\n      return storeGames( newGames )\n    } )\n  }\n\n  // GREG console.log( '[render] app' )\n\n  return (\n    <div className=\"app app-amnezic\">\n\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<HomePage games={games} addGame={addGame} updateGame={updateGame} deleteGames={deleteGames}/>} />\n          <Route path=\"/game/:gameId/settings\" element={<SettingsPage games={games} updateGame={updateGame} />} />        \n          <Route path=\"/game/:gameId/players\" element={<PlayersPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/start\" element={<StartPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/question/:questionNumber\" element={<QuestionPage games={games} updateGame={updateGame} updateQuestion={updateQuestion}/>} />\n          <Route path=\"/game/:gameId/scores\" element={<ScoresPage games={games} updateGame={updateGame} addGame={addGame} />} />\n          <Route path=\"/avatars\" element={<AvatarsPage />} />\n          <Route path=\"/cards\" element={<PlayingCardsPage />} />\n        </Routes>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","\"use client\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary fallback={<div>Something went wrong</div>}>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}"],"sourceRoot":""}